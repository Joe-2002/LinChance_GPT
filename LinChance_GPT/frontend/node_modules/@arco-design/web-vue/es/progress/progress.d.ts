import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    type: {
        type: PropType<"circle" | "line">;
        default: string;
    };
    size: {
        type: PropType<"mini" | "medium" | "large" | "small">;
    };
    percent: {
        type: NumberConstructor;
        default: number;
    };
    steps: {
        type: NumberConstructor;
        default: number;
    };
    animation: {
        type: BooleanConstructor;
        default: boolean;
    };
    strokeWidth: {
        type: NumberConstructor;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
    };
    color: {
        type: (ObjectConstructor | StringConstructor)[];
    };
    trackColor: StringConstructor;
    bufferColor: {
        type: (ObjectConstructor | StringConstructor)[];
    };
    showText: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: PropType<"normal" | "success" | "warning" | "danger">;
    };
}, {
    cls: import("vue").ComputedRef<string[]>;
    computedStatus: import("vue").ComputedRef<"normal" | "success" | "warning" | "danger">;
    mergedSize: import("vue").ComputedRef<"mini" | "medium" | "large" | "small">;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type?: unknown;
    size?: unknown;
    percent?: unknown;
    steps?: unknown;
    animation?: unknown;
    strokeWidth?: unknown;
    width?: unknown;
    color?: unknown;
    trackColor?: unknown;
    bufferColor?: unknown;
    showText?: unknown;
    status?: unknown;
} & {
    type: "circle" | "line";
    animation: boolean;
    steps: number;
    percent: number;
    showText: boolean;
} & {
    color?: string | Record<string, any> | undefined;
    size?: "mini" | "medium" | "large" | "small" | undefined;
    strokeWidth?: number | undefined;
    width?: string | number | undefined;
    status?: "normal" | "success" | "warning" | "danger" | undefined;
    trackColor?: string | undefined;
    bufferColor?: string | Record<string, any> | undefined;
}>, {
    type: "circle" | "line";
    animation: boolean;
    steps: number;
    percent: number;
    showText: boolean;
}>;
export default _default;
