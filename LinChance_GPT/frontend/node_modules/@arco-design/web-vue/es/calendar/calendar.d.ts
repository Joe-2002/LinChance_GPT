import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: DateConstructor;
        default: undefined;
    };
    defaultValue: {
        type: DateConstructor;
    };
    mode: {
        type: PropType<"year" | "month">;
    };
    defaultMode: {
        type: PropType<"year" | "month">;
        default: string;
    };
    modes: {
        type: PropType<("year" | "month")[]>;
        default: () => string[];
    };
    allowSelect: {
        type: BooleanConstructor;
        default: boolean;
    };
    panel: {
        type: BooleanConstructor;
        default: boolean;
    };
    panelWidth: {
        type: NumberConstructor;
    };
    panelTodayBtn: {
        type: BooleanConstructor;
        default: boolean;
    };
    dayStartOfWeek: {
        type: PropType<0 | 1>;
        default: number;
    };
    isWeek: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    'update:modelValue': (date: Date) => true;
    change: (date: Date) => true;
    panelChange: (date: Date) => true;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    defaultValue?: unknown;
    mode?: unknown;
    defaultMode?: unknown;
    modes?: unknown;
    allowSelect?: unknown;
    panel?: unknown;
    panelWidth?: unknown;
    panelTodayBtn?: unknown;
    dayStartOfWeek?: unknown;
    isWeek?: unknown;
} & {
    defaultMode: "year" | "month";
    modes: ("year" | "month")[];
    allowSelect: boolean;
    panel: boolean;
    panelTodayBtn: boolean;
    dayStartOfWeek: 0 | 1;
    isWeek: boolean;
} & {
    mode?: "year" | "month" | undefined;
    modelValue?: Date | undefined;
    defaultValue?: Date | undefined;
    panelWidth?: number | undefined;
}> & {
    onChange?: ((date: Date) => any) | undefined;
    "onUpdate:modelValue"?: ((date: Date) => any) | undefined;
    onPanelChange?: ((date: Date) => any) | undefined;
}, {
    modelValue: Date;
    defaultMode: "year" | "month";
    modes: ("year" | "month")[];
    allowSelect: boolean;
    panel: boolean;
    panelTodayBtn: boolean;
    dayStartOfWeek: 0 | 1;
    isWeek: boolean;
}>;
export default _default;
