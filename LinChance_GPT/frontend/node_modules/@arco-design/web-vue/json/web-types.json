{
  "$schema": "https://raw.githubusercontent.com/JetBrains/web-types/master/schema/web-types.json",
  "framework": "vue",
  "name": "@arco-design/web-vue",
  "version": "2.49.3",
  "contributions": {
    "html": {
      "types-syntax": "typescript",
      "description-markup": "markdown",
      "tags": [
        {
          "name": "a-alert",
          "attributes": [
            {
              "name": "type",
              "description": "Type of the alert. 2.41.0 Added `normal` type",
              "value": {
                "type": "MessageType | 'normal'",
                "kind": "expression"
              }
            },
            {
              "name": "show-icon",
              "description": "Whether to show the icon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to show the close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "The title of the alert",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "banner",
              "description": "Whether to use as the top announcement (remove the border and rounded corners)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "center",
              "description": "Whether the content is displayed in the center",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Triggered when the close button is clicked"
            },
            {
              "name": "after-close",
              "description": "Triggered after the close animation ends"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "action",
              "description": "Actions"
            },
            {
              "name": "close-element",
              "description": "Close element"
            }
          ]
        },
        {
          "name": "a-affix",
          "attributes": [
            {
              "name": "offset-top",
              "description": "Triggered when the specified offset is reached from the top of the window",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "offset-bottom",
              "description": "Triggered when the specified offset is reached from the bottom of the window",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "target",
              "description": "Scroll container, default is `window`",
              "value": {
                "type": "string | HTMLElement | Window",
                "kind": "expression"
              }
            },
            {
              "name": "target-container",
              "description": "The outer scroll element of `target`, the default is `window`. `Affix` will monitor the scroll event of the element and update the position of the anchor in real time. The main purpose is to solve the problem that if the outer element scrolls when the target attribute is specified as a non-window element, it may cause the nail to escape from the container.",
              "value": {
                "type": "string | HTMLElement | Window",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the fixed state changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-auto-complete",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled mode)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Data used for auto-complete",
              "value": {
                "type": "(string | number | SelectOptionData | SelectOptionGroup)[]",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement | null | undefined",
                "kind": "expression"
              }
            },
            {
              "name": "strict",
              "description": "Whether it is strict verification mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-option",
              "description": "Custom option filtering method",
              "value": {
                "type": "FilterOption",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "trigger props",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow the input to be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Emitted when the value changes"
            },
            {
              "name": "search",
              "description": "Emitted when the user searches"
            },
            {
              "name": "select",
              "description": "Emitted when an option is selected"
            },
            {
              "name": "clear",
              "description": "Triggered when the user clicks the clear button"
            }
          ],
          "slots": [
            {
              "name": "option",
              "description": "Display content of options"
            },
            {
              "name": "footer",
              "description": "The footer of the popup menu box"
            }
          ]
        },
        {
          "name": "a-anchor",
          "attributes": [
            {
              "name": "boundary",
              "description": "Scrolling boundary value. After setting the value to a number, it will stop scrolling when the distance is `boundary` from the scrolling container.",
              "value": {
                "type": "BoundaryPosition | number",
                "kind": "expression"
              }
            },
            {
              "name": "line-less",
              "description": "Whether to show the left axis",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "scroll-container",
              "description": "Scroll container",
              "value": {
                "type": "string | HTMLElement | Window",
                "kind": "expression"
              }
            },
            {
              "name": "change-hash",
              "description": "Whether to change the hash. When set to `false`, clicking on the anchor will not change the hash of the page",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "smooth",
              "description": "Whether to use smooth scrolling",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "select",
              "description": "Triggered when the user clicks on the link"
            },
            {
              "name": "change",
              "description": "Triggered when the link changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-anchor-link",
          "attributes": [
            {
              "name": "title",
              "description": "The text content of the anchor link",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "href",
              "description": "The address of the anchor link",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-avatar",
          "attributes": [
            {
              "name": "shape",
              "description": "The shape of the avatar, there are two kinds of circle (circle) and square (square)",
              "value": {
                "type": "AvatarShape",
                "kind": "expression"
              }
            },
            {
              "name": "image-url",
              "description": "Custom avatar image address. If this attribute is passed in, the img tag will be rendered by default",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the avatar, the unit is `px`. Use size `40px` in styles when not filled",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fix-font-size",
              "description": "Whether to automatically adjust the font size according to the size of the avatar.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-type",
              "description": "Clickable avatar interaction type",
              "value": {
                "type": "AvatarTriggerType",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-icon-style",
              "description": "Interactive icon style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Callback when clicked"
            },
            {
              "name": "error",
              "description": "image load error"
            },
            {
              "name": "load",
              "description": "image load success"
            }
          ],
          "slots": [
            {
              "name": "trigger-icon",
              "description": "Clickable avatar interaction icon"
            }
          ]
        },
        {
          "name": "a-avatar-group",
          "attributes": [
            {
              "name": "shape",
              "description": "The shape of the avatar in the group, there are two kinds of circle (circle) and square (square)",
              "value": {
                "type": "AvatarShape",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the avatar in the group, the unit is `px`",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fix-font-size",
              "description": "Whether to automatically adjust the font size according to the size of the avatar.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max-count",
              "description": "The maximum number of avatars displayed in the avatar group. The excess avatars will be displayed in the form of `+x`.",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "z-index-ascend",
              "description": "The avatar `z-index` in the avatar group increases, and the default is decreasing.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max-style",
              "description": "Style for +x.",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "max-popover-trigger-props",
              "description": "TriggerProps for popover around +x.",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-back-top",
          "attributes": [
            {
              "name": "visible-height",
              "description": "Display the trigger scroll height of the back to top button",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "target-container",
              "description": "Scroll event listener container",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "easing",
              "description": "Easing mode of scrolling animation, refer to [BTween](https://github.com/PengJiyuan/b-tween) for optional values",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "duration",
              "description": "Duration of scroll animation",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-badge",
          "attributes": [
            {
              "name": "text",
              "description": "Set the display text of the status dot",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "dot",
              "description": "Whether to display a red dot instead of `count`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "dot-style",
              "description": "Customize badge dot style",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "max-count",
              "description": "Max count to show. If count is larger than this value, it will be displayed as `${maxCount}+`",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "description": "Set offset of the badge dot",
              "value": {
                "type": "number[]",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "description": "Customize dot color",
              "value": {
                "type": "ColorType | string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Badge status",
              "value": {
                "type": "BadgeStatus",
                "kind": "expression"
              }
            },
            {
              "name": "count",
              "description": "Number to show in badge",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-breadcrumb",
          "attributes": [
            {
              "name": "max-count",
              "description": "Maximum number of breadcrumbs displayed (0 means no limit)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "routes",
              "description": "Set routes",
              "value": {
                "type": "BreadcrumbRoute[]",
                "kind": "expression"
              }
            },
            {
              "name": "separator",
              "description": "Delimiter text",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "custom-url",
              "description": "Custom link address",
              "value": {
                "type": "(paths: string[]) => string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "more-icon",
              "description": "Custom more icon"
            },
            {
              "name": "item-render",
              "description": "Effective when setting routes, custom render breadcrumbs"
            },
            {
              "name": "separator",
              "description": "Custom separator"
            }
          ]
        },
        {
          "name": "a-breadcrumb-item",
          "attributes": [
            {
              "name": "separator",
              "description": "Delimiter text",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "droplist",
              "description": "Dropdown content",
              "value": {
                "type": "BreadcrumbRoute['children']",
                "kind": "expression"
              }
            },
            {
              "name": "dropdown-props",
              "description": "Dropdown props",
              "value": {
                "type": "DropDownProps",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "droplist",
              "description": "Custom droplist"
            },
            {
              "name": "separator",
              "description": "Custom separator"
            }
          ]
        },
        {
          "name": "a-button",
          "attributes": [
            {
              "name": "type",
              "description": "Button types are divided into five types: secondary, primary, dashed, outline and text.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "shape",
              "description": "Button shape",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Button state",
              "value": {
                "type": "Status",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Button size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "long",
              "description": "Whether the width of the button adapts to the container.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether the button is in the loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether the button is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "html-type",
              "description": "Set the native `type` attribute of `button`, optional values refer to [HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type \"_blank\")",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "href",
              "description": "Set up a jump link. When this property is set, the button is rendered as `<a>`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Emitted when the button is clicked"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            }
          ]
        },
        {
          "name": "a-button-group",
          "attributes": [
            {
              "name": "type",
              "description": "Children button types are divided into five types: secondary, primary, dashed, outline and text.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Children button state",
              "value": {
                "type": "Status",
                "kind": "expression"
              }
            },
            {
              "name": "shape",
              "description": "Button shape",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Children button size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "All children whether the button is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-card",
          "attributes": [
            {
              "name": "bordered",
              "description": "Whether to render the border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Loading status",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hoverable",
              "description": "Can be hovered",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Size of card",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "header-style",
              "description": "The additional css style to apply to card head",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "body-style",
              "description": "The additional css style to apply to card content",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title of card",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "extra",
              "description": "Content to render in the top-right corner of the card",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "actions",
              "description": "The action list which shows at the bottom of the Card"
            },
            {
              "name": "cover",
              "description": "Cover of card"
            },
            {
              "name": "extra",
              "description": "Content to render in the top-right corner of the card"
            },
            {
              "name": "title",
              "description": "Title of card"
            }
          ]
        },
        {
          "name": "a-card-meta",
          "attributes": [
            {
              "name": "title",
              "description": "Title of card",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "Description of card",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "description",
              "description": "Description of card"
            },
            {
              "name": "title",
              "description": "Title of card"
            },
            {
              "name": "avatar",
              "description": "Avatar of card"
            }
          ]
        },
        {
          "name": "a-card-grid",
          "attributes": [
            {
              "name": "hoverable",
              "description": "Whether to hover",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-carousel",
          "attributes": [
            {
              "name": "current",
              "description": "The index of current slide which starts from 1",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-current",
              "description": "Default index of current slide",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "move-speed",
              "description": "The duration of the slide movement(ms)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "animation-name",
              "description": "The animation of the slide movement",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "How to trigger the slide switch, click/hover the indicator",
              "value": {
                "type": "CarouselTriggerEvent",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "The direction of the slide movement",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "show-arrow",
              "description": "When to show the arrow used to switch",
              "value": {
                "type": "CarouselArrowType",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-class",
              "description": "The additional css class to arrow used to switch",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "indicator-type",
              "description": "Type of indicator",
              "value": {
                "type": "CarouselIndicatorType",
                "kind": "expression"
              }
            },
            {
              "name": "indicator-position",
              "description": "Position of indication",
              "value": {
                "type": "CarouselIndicatorPosition",
                "kind": "expression"
              }
            },
            {
              "name": "indicator-class",
              "description": "The additional css class to indicator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "transition-timing-function",
              "description": "How intermediate values are calculated for CSS properties being affected by a transition effect.\n[transition-timing-function](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-timing-function)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Callback when slide changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-cascader",
          "attributes": [
            {
              "name": "path-mode",
              "description": "Whether the value is a path",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "Whether it is a multi-selection state (The search is turned on by default in the multi-select mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "| string\n| number\n| Record<string, any>\n| (\n    | string\n    | number\n    | Record<string, any>\n    | (string | number | Record<string, any>)[]\n  )[]\n| undefined",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "| string\n| number\n| Record<string, any>\n| (\n    | string\n    | number\n    | Record<string, any>\n    | (string | number | Record<string, any>)[]\n  )[]\n| undefined",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "Options for cascader",
              "value": {
                "type": "CascaderOption[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the select",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "allow-search",
              "description": "Whether to allow searching",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "input-value",
              "description": "The value of the input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-input-value",
              "description": "The default value of the input (uncontrolled state)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Whether to show the dropdown",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "expand-trigger",
              "description": "Expand the trigger method of the next level",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether to display the dropdown by default (uncontrolled state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Placeholder",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "filter-option",
              "description": "Custom options filter method",
              "value": {
                "type": "(inputValue: string, option: CascaderOption) => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement | null | undefined",
                "kind": "expression"
              }
            },
            {
              "name": "max-tag-count",
              "description": "In multi-select mode, the maximum number of labels displayed. 0 means unlimited",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "format-label",
              "description": "Format display content",
              "value": {
                "type": "(options: CascaderOption[]) => string",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "Trigger props of the drop-down menu",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            },
            {
              "name": "check-strictly",
              "description": "Whether to enable strict selection mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load-more",
              "description": "Data lazy loading function, open the lazy loading function when it is passed in",
              "value": {
                "type": "(\n  option: CascaderOption,\n  done: (children?: CascaderOption[]) => void\n) => void",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "search-option-only-label",
              "description": "Whether the options in the search dropdown show only label",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "search-delay",
              "description": "Delay time to trigger search event",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Customize fields in `CascaderOption`",
              "value": {
                "type": "CascaderFieldNames",
                "kind": "expression"
              }
            },
            {
              "name": "value-key",
              "description": "Used to determine the option key value attribute name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fallback",
              "description": "Options that do not exist in custom values",
              "value": {
                "type": "| boolean\n| ((\n    value:\n      | string\n      | number\n      | Record<string, unknown>\n      | (string | number | Record<string, unknown>)[]\n  ) => string)",
                "kind": "expression"
              }
            },
            {
              "name": "expand-child",
              "description": "whether to expand the submenu",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "virtual-list-props",
              "description": "Pass the virtual list attribute, pass in this parameter to turn on virtual scrolling [VirtualListProps](#VirtualListProps)",
              "value": {
                "type": "VirtualListProps",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the selected value changes"
            },
            {
              "name": "input-value-change",
              "description": "Triggered when the input value changes"
            },
            {
              "name": "clear",
              "description": "Triggered when the clear button is clicked"
            },
            {
              "name": "search",
              "description": "Triggered when the user searches"
            },
            {
              "name": "popup-visible-change",
              "description": "Triggered when the display state of the dropdown changes"
            },
            {
              "name": "focus",
              "description": "Triggered when focus"
            },
            {
              "name": "blur",
              "description": "Triggered when blur"
            }
          ],
          "slots": [
            {
              "name": "label",
              "description": "Display content of label"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            },
            {
              "name": "arrow-icon",
              "description": "Arrow icon for select box"
            },
            {
              "name": "loading-icon",
              "description": "Loading icon for select box"
            },
            {
              "name": "search-icon",
              "description": "Search icon for select box"
            },
            {
              "name": "empty",
              "description": "Display content when the option is empty"
            },
            {
              "name": "option",
              "description": "Display content of options"
            }
          ]
        },
        {
          "name": "a-cascader-panel",
          "attributes": [
            {
              "name": "path-mode",
              "description": "Whether the value is a path",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "Whether it is a multi-selection state (The search is turned on by default in the multi-select mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "| string\n| number\n| Record<string, any>\n| (\n    | string\n    | number\n    | Record<string, any>\n    | (string | number | Record<string, any>)[]\n  )[]\n| undefined",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "| string\n| number\n| Record<string, any>\n| (\n    | string\n    | number\n    | Record<string, any>\n    | (string | number | Record<string, any>)[]\n  )[]\n| undefined",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "Options for cascader",
              "value": {
                "type": "CascaderOption[]",
                "kind": "expression"
              }
            },
            {
              "name": "expand-trigger",
              "description": "Expand the trigger method of the next level",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "check-strictly",
              "description": "Whether to enable strict selection mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load-more",
              "description": "Data lazy loading function, open the lazy loading function when it is passed in",
              "value": {
                "type": "(\n  option: CascaderOption,\n  done: (children?: CascaderOption[]) => void\n) => void",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Customize fields in `CascaderOption`",
              "value": {
                "type": "CascaderFieldNames",
                "kind": "expression"
              }
            },
            {
              "name": "value-key",
              "description": "Used to determine the option key value attribute name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "expand-child",
              "description": "whether to expand the submenu",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the selected value changes"
            }
          ],
          "slots": [
            {
              "name": "empty",
              "description": "Display content when the option is empty"
            }
          ]
        },
        {
          "name": "a-checkbox",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "boolean | Array<string | number | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked",
              "description": "Whether checked by default (uncontrolled state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value",
              "description": "The `value` of the option",
              "value": {
                "type": "string|number|boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "indeterminate",
              "description": "Whether it is half-selected",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            }
          ],
          "slots": [
            {
              "name": "checkbox",
              "description": "Custom checkbox"
            }
          ]
        },
        {
          "name": "a-checkbox-group",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "Array<string | number | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "Array<string | number | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "Support the maximum number of selections",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "Options",
              "value": {
                "type": "Array<string | number | CheckboxOption>",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "Arrangement direction of checkboxes",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            }
          ],
          "slots": [
            {
              "name": "checkbox",
              "description": "Custom checkbox"
            },
            {
              "name": "label",
              "description": "checkbox label content"
            }
          ]
        },
        {
          "name": "a-comment",
          "attributes": [
            {
              "name": "author",
              "description": "Display as the comment author",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "avatar",
              "description": "Display as the comment avatar",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "The content of the comment",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "datetime",
              "description": "Display as the comment datetime",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "description": "Alignment of `datetime` and `actions`",
              "value": {
                "type": "string|object",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "avatar",
              "description": "Avatar"
            },
            {
              "name": "author",
              "description": "Author name"
            },
            {
              "name": "datetime",
              "description": "Datetime info"
            },
            {
              "name": "content",
              "description": "Comment content"
            },
            {
              "name": "actions",
              "description": "Action list"
            }
          ]
        },
        {
          "name": "a-config-provider",
          "attributes": [
            {
              "name": "prefix-cls",
              "description": "Component classname prefix",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "locale",
              "description": "Configure language pack",
              "value": {
                "type": "ArcoLang",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "global",
              "description": "Is global effect",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "scroll-to-close",
              "description": "Whether to close the popover when scrolling",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "exchange-time",
              "description": "Whether to exchange time",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "loading",
              "description": "Custom loading element"
            },
            {
              "name": "empty",
              "description": "Custom empty element"
            }
          ]
        },
        {
          "name": "a-collapse",
          "attributes": [
            {
              "name": "active-key",
              "description": "The `key` of the currently expanded panel",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-active-key",
              "description": "The `key` of the panel expanded by default (uncontrolled mode)",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "accordion",
              "description": "Whether to enable accordion mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-expand-icon",
              "description": "Whether to show the expand icon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "expand-icon-position",
              "description": "The location where the expand icon is displayed",
              "value": {
                "type": "ExpandIconPositions",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether to show the border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-hide",
              "description": "Whether to destroy content when hidden",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Emitted when the expanded panel changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-collapse-item",
          "attributes": [
            {
              "name": "key",
              "description": "The id of the panel, corresponding to the value in `activeKey`",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "header",
              "description": "The title of the panel",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-expand-icon",
              "description": "Whether to show the expand icon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-hide",
              "description": "Whether to destroy content when hidden",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "extra",
              "description": "Extra Content"
            },
            {
              "name": "expand-icon",
              "description": "Expand icon"
            },
            {
              "name": "header",
              "description": "The title of the panel"
            }
          ]
        },
        {
          "name": "a-calendar",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "date",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "date",
                "kind": "expression"
              }
            },
            {
              "name": "mode",
              "description": "Mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-mode",
              "description": "Default Mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "modes",
              "description": "Displayed mode",
              "value": {
                "type": "('month' | 'year')[]",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Emitted when the button is clicked"
            },
            {
              "name": "panel-change",
              "description": "Emitted when the button is clicked"
            }
          ],
          "slots": []
        },
        {
          "name": "a-range-picker",
          "attributes": [
            {
              "name": "mode",
              "description": "Type of range selector",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "(Date | string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value",
              "value": {
                "type": "(Date | string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "picker-value",
              "description": "The date displayed in the default panel",
              "value": {
                "type": "(Date | string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-picker-value",
              "description": "Date displayed on the panel",
              "value": {
                "type": "(Date | string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean | boolean[]",
                "kind": "expression"
              }
            },
            {
              "name": "day-start-of-week",
              "description": "The first day of the week starts on the day of the week, 0-Sunday, 1-Monday, and so on.",
              "value": {
                "type": "WeekStart",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "description": "Display the format of the date, refer to [String Parsing Format](#string-parsing-format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "value-format",
              "description": "The format of the value, valid for `value` `defaultValue` `pickerValue` `defaultPickerValue` and the return value in the event, supports setting as timestamp, Date and string (refer to [String parsing format](#string-parsing-format) ). If not specified, it will be formatted as a string, in the same format as `format`.",
              "value": {
                "type": "'timestamp' | 'Date' | string",
                "kind": "expression"
              }
            },
            {
              "name": "show-time",
              "description": "Whether to increase time selection",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "time-picker-props",
              "description": "Time display parameters, refer to [TimePickerProps](/vue/component/time-picker)",
              "value": {
                "type": "Partial<TimePickerProps>",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Prompt copy",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-date",
              "description": "Non-selectable date",
              "value": {
                "type": "(current: Date, type: 'start' | 'end') => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-time",
              "description": "Unselectable time",
              "value": {
                "type": "(current: Date, type: 'start' | 'end') => DisabledTimeProps",
                "kind": "expression"
              }
            },
            {
              "name": "separator",
              "description": "The segmentation symbol in the input box of the range selector",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "exchange-time",
              "description": "Whether the time will be exchanged, by default time will affect and participate in the ordering of start and end values, if you want to fix the time order, you can turn it off.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-input",
              "description": "Whether input is disabled with the keyboard.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "abbreviation",
              "description": "Whether to enable abbreviation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "The component value changes"
            },
            {
              "name": "select",
              "description": "The selected date has changed but the component value has not changed"
            },
            {
              "name": "popup-visible-change",
              "description": "Open or close the pop-up box"
            },
            {
              "name": "ok",
              "description": "Click the confirm button"
            },
            {
              "name": "clear",
              "description": "Click the clear button"
            },
            {
              "name": "select-shortcut",
              "description": "Click on the shortcut option"
            },
            {
              "name": "picker-value-change",
              "description": "Panel date change"
            }
          ],
          "slots": []
        },
        {
          "name": "a-descriptions",
          "attributes": [
            {
              "name": "data",
              "description": "Data for descriptions",
              "value": {
                "type": "DescData[]",
                "kind": "expression"
              }
            },
            {
              "name": "column",
              "description": "The number of data placed in each row. Version 2.20.0 supports reactive configuration, the configuration can refer to Grid",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title of descriptions",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "layout",
              "description": "Arrangement of descriptions",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "description": "Alignment position of text",
              "value": {
                "type": "TextAlign | { label?: TextAlign; value?: TextAlign }",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the descriptions",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether to show the border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label-style",
              "description": "Data label style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "value-style",
              "description": "Data content style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "table-layout",
              "description": "The `layout-fixed` of the table style in the description. The width will be evenly distributed when it's set to `fixed`.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "value",
              "description": "Data value"
            },
            {
              "name": "label",
              "description": "Data label"
            },
            {
              "name": "title",
              "description": "Title"
            }
          ]
        },
        {
          "name": "a-descriptions-item",
          "attributes": [
            {
              "name": "span",
              "description": "number of columns",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "Label",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "label",
              "description": "Label"
            }
          ]
        },
        {
          "name": "a-divider",
          "attributes": [
            {
              "name": "direction",
              "description": "The direction of the dividing line. Can be horizontal or vertical",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "orientation",
              "description": "The position of the dividing line text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Dividing line style type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The wide/height of the dividing line",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "margin",
              "description": "Margin up and down the split line (left and right margin in vertical direction)",
              "value": {
                "type": "number | string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-drawer",
          "attributes": [
            {
              "name": "visible",
              "description": "Whether the drawer is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-visible",
              "description": "Whether the drawer is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "description": "Where the drawer is placed",
              "value": {
                "type": "DrawerPlacements",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "mask",
              "description": "Whether to show the mask",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mask-closable",
              "description": "Click on the mask layer to be able to close",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to show the close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "ok-text",
              "description": "The content of the ok button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-text",
              "description": "The content of the cancel button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "ok-loading",
              "description": "Whether the ok button is in the loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "ok-button-props",
              "description": "Props of confirm button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-button-props",
              "description": "Props of cancel button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "unmount-on-close",
              "description": "Whether to uninstall the node when close",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "The width of the drawer (only available when placement is right, left)",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "height",
              "description": "The height of the drawer (only available when placement is top, bottom)",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "drawer-style",
              "description": "Drawer style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-ok",
              "description": "The callback function before the ok event is triggered. If false is returned, subsequent events will not be triggered, and done can also be used to close asynchronously.",
              "value": {
                "type": "(\n  done: (closed: boolean) => void\n) => void | boolean | Promise<void | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-cancel",
              "description": "The callback function before the cancel event is triggered. If it returns false, no subsequent events will be triggered.",
              "value": {
                "type": "() => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "esc-to-close",
              "description": "Whether to support the ESC key to close the dialog",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "render-to-body",
              "description": "Whether the drawer is mounted under the `body` element",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "header",
              "description": "Whether to display high-quality content",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "footer",
              "description": "Whether to display the bottom content",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-cancel",
              "description": "Whether to hide the cancel button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "ok",
              "description": "Triggered when the OK button is clicked"
            },
            {
              "name": "cancel",
              "description": "Triggered when the cancel or close button is clicked"
            },
            {
              "name": "open",
              "description": "Triggered after the drawer is opened (the animation ends)"
            },
            {
              "name": "close",
              "description": "Triggered when the drawer is closed (the animation ends)"
            },
            {
              "name": "before-open",
              "description": "Triggered before drawer is opened"
            },
            {
              "name": "before-close",
              "description": "Triggered before drawer is closed"
            }
          ],
          "slots": [
            {
              "name": "header",
              "description": "Header"
            },
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "footer",
              "description": "Footer"
            }
          ]
        },
        {
          "name": "a-dropdown",
          "attributes": [
            {
              "name": "popup-visible",
              "description": "Whether the popup is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popup is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "TriggerEvent | TriggerEvent[]",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "DropdownPosition",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-select",
              "description": "Whether to hide popup when the user selects",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Triggered when the display status of the drop-down box changes"
            },
            {
              "name": "select",
              "description": "Triggered when the user selects"
            }
          ],
          "slots": [
            {
              "name": "content",
              "description": "Content"
            },
            {
              "name": "footer",
              "description": "Footer"
            }
          ]
        },
        {
          "name": "a-doption",
          "attributes": [
            {
              "name": "value",
              "description": "Value",
              "value": {
                "type": "string|number|object",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Emitted when the button is clicked"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            }
          ]
        },
        {
          "name": "a-dgroup",
          "attributes": [
            {
              "name": "title",
              "description": "Group title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "title",
              "description": "Group title"
            }
          ]
        },
        {
          "name": "a-dsubmenu",
          "attributes": [
            {
              "name": "value",
              "description": "Value (Not useful after version 2.16.0)",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "'hover' | 'click' | ('hover' | 'click')[]",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Whether the popup is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popup is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "option-props",
              "description": "Custom option properties",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Triggered when the display status of the drop-down box changes"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "content",
              "description": "Submenu content"
            },
            {
              "name": "footer",
              "description": "Footer"
            }
          ]
        },
        {
          "name": "a-dropdown-button",
          "attributes": [
            {
              "name": "popup-visible",
              "description": "Whether the popup is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popup is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "TriggerEvent | TriggerEvent[]",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "DropdownPosition",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement | null | undefined",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Button type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Button size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "button-props",
              "description": "Button props",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-select",
              "description": "Whether to hide popup when the user selects",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Triggered when the display status of the drop-down box changes"
            },
            {
              "name": "click",
              "description": "Emitted when the button is clicked"
            },
            {
              "name": "select",
              "description": "Triggered when the user selects"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Button icon"
            },
            {
              "name": "content",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-empty",
          "attributes": [
            {
              "name": "description",
              "description": "Description",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "img-src",
              "description": "The src of the Custom Image",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "in-config-provider",
              "description": "Whether to use in ConfigProvider",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "image",
              "description": "Image/Icon"
            }
          ]
        },
        {
          "name": "a-form",
          "attributes": [
            {
              "name": "model",
              "description": "Form data object",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "layout",
              "description": "The layout of the form, including horizontal, vertical, and multi-column",
              "value": {
                "type": "FormLayout",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the form",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "label-col-props",
              "description": "Label element layout options. The parameters are the same as the `<col>` component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "wrapper-col-props",
              "description": "Form control layout options. The parameters are the same as the `<col>` component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "label-align",
              "description": "Alignment direction of the label",
              "value": {
                "type": "FormLabelAlign",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable the form",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "rules",
              "description": "Form item validation rules",
              "value": {
                "type": "Record<string, FieldRule | FieldRule[]>",
                "kind": "expression"
              }
            },
            {
              "name": "auto-label-width",
              "description": "Whether to enable automatic label width, it only takes effect under `layout=\"horizontal\"`.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "submit",
              "description": "Triggered when the form is submitted"
            },
            {
              "name": "submit-success",
              "description": "Triggered when verification is successful"
            },
            {
              "name": "submit-failed",
              "description": "Triggered when verification failed"
            }
          ],
          "slots": []
        },
        {
          "name": "a-form-item",
          "attributes": [
            {
              "name": "field",
              "description": "The path of the form element in the data object (required for the data item)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "Label text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "tooltip",
              "description": "Tooltip text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-colon",
              "description": "Whether to show a colon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "no-style",
              "description": "Whether to remove the style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "help",
              "description": "Help copywriting",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "extra",
              "description": "Additional display copy",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "required",
              "description": "Is it required",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "asterisk-position",
              "description": "Optionally place an asterisk before/after the label",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "rules",
              "description": "Form item validation rules (The priority is higher than the rules of form)",
              "value": {
                "type": "FieldRule | FieldRule[]",
                "kind": "expression"
              }
            },
            {
              "name": "validate-status",
              "description": "Validate status",
              "value": {
                "type": "ValidateStatus",
                "kind": "expression"
              }
            },
            {
              "name": "validate-trigger",
              "description": "The event that triggers the verification",
              "value": {
                "type": "ValidateTrigger | ValidateTrigger[]",
                "kind": "expression"
              }
            },
            {
              "name": "label-col-props",
              "description": "Label element layout options. The parameters are the same as the `<col>` component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "wrapper-col-props",
              "description": "Form control layout options. The parameters are the same as the `<col>` component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "hide-label",
              "description": "Whether to hide the label",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-asterisk",
              "description": "Whether to hide the asterisk",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label-col-style",
              "description": "The style of the label element layout component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "wrapper-col-style",
              "description": "The style of the form control layout component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "row-props",
              "description": "Form item layout options. The parameters are the same as the `<row>` component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "row-class",
              "description": "The class of the form item layout component",
              "value": {
                "type": "string|array|object",
                "kind": "expression"
              }
            },
            {
              "name": "content-class",
              "description": "The class of the form control wrapping layer",
              "value": {
                "type": "string|array|object",
                "kind": "expression"
              }
            },
            {
              "name": "content-flex",
              "description": "Whether to enable flex layout in the content layer",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "merge-props",
              "description": "(Repealed) Control the Props passed to the child element. The default includes disabled, error, size, events and additional attributes on FormItem. Version 2.18.0 deprecated",
              "value": {
                "type": "boolean | ((props: Record<string, any>) => Record<string, any>)",
                "kind": "expression"
              }
            },
            {
              "name": "label-col-flex",
              "description": "Set the flex property of the label `Col` component. When set, the flex property of the form `Col` component will be set to `auto`.",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "feedback",
              "description": "Whether to show the feedback icon for the form control",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label-component",
              "description": "The element that the form item label renders",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label-attrs",
              "description": "Attributes of the form item element",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "label",
              "description": "Label"
            },
            {
              "name": "help",
              "description": "Help message"
            },
            {
              "name": "extra",
              "description": "Extra content"
            }
          ]
        },
        {
          "name": "a-row",
          "attributes": [
            {
              "name": "gutter",
              "description": "Grid interval in `px`. Pass in the responsive object like {xs: 4, sm: 6, md: 12}. Pass in the array [horizontal spacing, vertical spacing] to set two directions.",
              "value": {
                "type": "| number\n| ResponsiveValue\n| [number | ResponsiveValue, number | ResponsiveValue]",
                "kind": "expression"
              }
            },
            {
              "name": "justify",
              "description": "Horizontal alignment (`justify-content`)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "description": "Vertical alignment (`align-items`)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "div",
              "description": "Enabling this option `Row` and `Col` will be treated as divs without any Grid-related classes and styles",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "wrap",
              "description": "Whether `Col` can wrap onto multiple lines",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-col",
          "attributes": [
            {
              "name": "span",
              "description": "Number of grid space",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "description": "The number of grids on the left side of the grid. There can be no grids in the grid.",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "order",
              "description": "Sort elements",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "xs",
              "description": "<576px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "sm",
              "description": ">= 576px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "md",
              "description": ">= 768px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "lg",
              "description": ">= 992px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "xl",
              "description": ">= 1200px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "xxl",
              "description": ">= 1600px responsive grid",
              "value": {
                "type": "number | { [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "flex",
              "description": "Set flex layout properties",
              "value": {
                "type": "number | string | 'initial' | 'auto' | 'none'",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-grid",
          "attributes": [
            {
              "name": "cols",
              "description": "Number of columns displayed in each row",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "row-gap",
              "description": "The space in row-to-row",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "col-gap",
              "description": "The space in column-to-column",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed",
              "description": "Whether to collapsed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed-rows",
              "description": "Number of rows displayed when collapsed",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-grid-item",
          "attributes": [
            {
              "name": "span",
              "description": "Number of grids spanned",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "description": "Number of grids on the left",
              "value": {
                "type": "number | ResponsiveValue",
                "kind": "expression"
              }
            },
            {
              "name": "suffix",
              "description": "Is it a suffix element",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-image",
          "attributes": [
            {
              "name": "src",
              "description": "Image src",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "Image width",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "height",
              "description": "Image height",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "Description, will be displayed at the bottom. if alt has no value, it will be set to alt",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fit",
              "description": "indicate how the image should be resized to fit its container",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "alt",
              "description": "Text description of the image",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-footer",
              "description": "Whether to hide footer (Version 2.36.0 supports the 'never' parameter, which supports displaying bottom content when loading errors)",
              "value": {
                "type": "boolean | 'never'",
                "kind": "expression"
              }
            },
            {
              "name": "footer-position",
              "description": "The position shown at the bottom",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-loader",
              "description": "Whether to show the loading effect",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "preview",
              "description": "Whether to enable preview",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "preview-visible",
              "description": "Control the open state of the preview, can be used in conjunction with previewVisibleChange",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-preview-visible",
              "description": "The default open state of the preview",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "preview-props",
              "description": "Preview configuration items (all options are optional) [ImagePreviewProps](#image-preview%20Props)",
              "value": {
                "type": "ImagePreviewProps",
                "kind": "expression"
              }
            },
            {
              "name": "footer-class",
              "description": "The class name of the bottom display area",
              "value": {
                "type": "string|array|object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "preview-visible-change",
              "description": "Preview opening and closing events"
            }
          ],
          "slots": [
            {
              "name": "error",
              "description": "Customize error content."
            },
            {
              "name": "error-icon",
              "description": "Customize the icon of error content."
            },
            {
              "name": "loader",
              "description": "Customize loading effect."
            },
            {
              "name": "extra",
              "description": "Extra content at the bottom"
            }
          ]
        },
        {
          "name": "a-image-preview",
          "attributes": [
            {
              "name": "src",
              "description": "Image src",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "visible",
              "description": "Whether is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-visible",
              "description": "Default visiblity",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mask-closable",
              "description": "Whether to close the modal when mask is clicked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to show close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "actions-layout",
              "description": "Layout of action list",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Set the mount point of the pop-up box, the same as the `to` of `teleport`, the default value is document.body",
              "value": {
                "type": "HTMLElement",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Close event"
            }
          ],
          "slots": [
            {
              "name": "actions",
              "description": "Customize additional action items"
            }
          ]
        },
        {
          "name": "a-image-preview-group",
          "attributes": [
            {
              "name": "src-list",
              "description": "Picture list (after setting this property, the picture information of a-image subcomponent will no longer be collected)",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "current",
              "description": "The index of the currently displayed image",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-current",
              "description": "The index of the first image shown",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "infinite",
              "description": "Whether to loop infinitely",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "visible",
              "description": "Whether is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-visible",
              "description": "Default visiblity",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mask-closable",
              "description": "Whether to close the modal when mask is clicked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to show close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "actions-layout",
              "description": "Layout of action list",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Set the mount point of the pop-up box, the same as the `to` of `teleport`, the default value is document.body",
              "value": {
                "type": "HTMLElement | string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Image switch"
            },
            {
              "name": "visible-change",
              "description": "Preview visibility change"
            }
          ],
          "slots": [
            {
              "name": "actions",
              "description": "Customize additional action items"
            }
          ]
        },
        {
          "name": "a-image-preview-action",
          "attributes": [
            {
              "name": "name",
              "description": "the name of the action",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable the action",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-input-number",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled mode)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "mode",
              "description": "Mode (`embed`: button embedded mode, `button`: left and right button mode)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "precision",
              "description": "Precision",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "description": "Number change step",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "Max",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "description": "Min",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "formatter",
              "description": "Define the display value of the input",
              "value": {
                "type": "func",
                "kind": "expression"
              }
            },
            {
              "name": "parser",
              "description": "Convert from `formatter` to number, and use with `formatter`",
              "value": {
                "type": "func",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Input prompt text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-button",
              "description": "Whether to hide the button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Input size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow the input to be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "model-event",
              "description": "Trigger event for `v-model`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "read-only",
              "description": "Readonly",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the value changes"
            },
            {
              "name": "focus",
              "description": "Triggered when the input gets focus"
            },
            {
              "name": "blur",
              "description": "Triggered when the input box loses focus"
            },
            {
              "name": "clear",
              "description": "Triggered when the user clicks the clear button"
            },
            {
              "name": "input",
              "description": "Triggered on input"
            }
          ],
          "slots": [
            {
              "name": "minus",
              "description": "Minus"
            },
            {
              "name": "plus",
              "description": "Plus"
            },
            {
              "name": "append",
              "description": "Append"
            },
            {
              "name": "prepend",
              "description": "Prepend"
            },
            {
              "name": "suffix",
              "description": "Suffix"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            }
          ]
        },
        {
          "name": "a-input",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Input size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow the input to be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "description": "Whether it is read-only",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Prompt text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "max-length",
              "description": "Enter the maximum length of the value, the errorOnly attribute was added in version 2.12.0",
              "value": {
                "type": "number | { length: number; errorOnly?: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "show-word-limit",
              "description": "Whether to display word count",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "word-length",
              "description": "Calculation method of word length",
              "value": {
                "type": "(value: string) => number",
                "kind": "expression"
              }
            },
            {
              "name": "word-slice",
              "description": "Character interception method, used together with wordLength",
              "value": {
                "type": "(value: string, maxLength: number) => string",
                "kind": "expression"
              }
            },
            {
              "name": "input-attrs",
              "description": "Attributes of inner input elements",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "input",
              "description": "Triggered when the user enters"
            },
            {
              "name": "change",
              "description": "Only triggered when the input box is out of focus or when you press Enter"
            },
            {
              "name": "press-enter",
              "description": "Triggered when the user presses enter"
            },
            {
              "name": "clear",
              "description": "Triggered when the user clicks the clear button"
            },
            {
              "name": "focus",
              "description": "Triggered when the input box gets focus"
            },
            {
              "name": "blur",
              "description": "Triggered when the input box loses focus"
            }
          ],
          "slots": [
            {
              "name": "append",
              "description": "Append"
            },
            {
              "name": "prepend",
              "description": "Prepend"
            },
            {
              "name": "suffix",
              "description": "Suffix"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            }
          ]
        },
        {
          "name": "a-input-group",
          "attributes": [],
          "events": [],
          "slots": []
        },
        {
          "name": "a-input-password",
          "attributes": [
            {
              "name": "invisible-button",
              "description": "Whether to show visible buttons",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-input-search",
          "attributes": [
            {
              "name": "search-button",
              "description": "Whether it is the rear button mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Input size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "button-text",
              "description": "The text of the search button will replace the original icon after use",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "button-props",
              "description": "Button props",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "search",
              "description": "Triggered when the search button is clicked"
            }
          ],
          "slots": []
        },
        {
          "name": "a-input-tag",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "(string | number | TagData)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "(string | number | TagData)[]",
                "kind": "expression"
              }
            },
            {
              "name": "input-value",
              "description": "The value of the input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-input-value",
              "description": "The default value of the input (uncontrolled state)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Placeholder",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "description": "Whether it is read-only mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the input",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "max-tag-count",
              "description": "The maximum number of tags displayed, `0` means unlimited",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "retain-input-value",
              "description": "Whether to keep the content of the input box",
              "value": {
                "type": "boolean | { create?: boolean; blur?: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "format-tag",
              "description": "Format tag content",
              "value": {
                "type": "(data: TagData) => string",
                "kind": "expression"
              }
            },
            {
              "name": "unique-value",
              "description": "Whether to create only unique values",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Customize fields in `TagData`",
              "value": {
                "type": "InputTagFieldNames",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the value changes"
            },
            {
              "name": "input-value-change",
              "description": "Trigger when the input value changes"
            },
            {
              "name": "press-enter",
              "description": "Triggered when the enter key is pressed"
            },
            {
              "name": "remove",
              "description": "Triggered when the delete button of the label is clicked"
            },
            {
              "name": "clear",
              "description": "Triggered when the clear button is clicked"
            },
            {
              "name": "focus",
              "description": "Triggered when the input box gets focus"
            },
            {
              "name": "blur",
              "description": "Triggered when the input box loses focus"
            }
          ],
          "slots": [
            {
              "name": "tag",
              "description": "Display content of tag"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            },
            {
              "name": "suffix",
              "description": "Suffix"
            }
          ]
        },
        {
          "name": "a-layout",
          "attributes": [
            {
              "name": "has-sider",
              "description": "Indicates that there is a Sider in the sub-element, which generally does not need to be specified. Used to avoid style flicker when rendering on the server side.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-layout-header",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-layout-content",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-layout-footer",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-layout-sider",
          "attributes": [
            {
              "name": "theme",
              "description": "Theme",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed",
              "description": "Current collapsed state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-collapsed",
              "description": "The default collapsed state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapsible",
              "description": "Whether is collapsible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "Width",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed-width",
              "description": "Collapsed width",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "reverse-arrow",
              "description": "Flip and fold the direction of the hint arrow, which can be used when Sider is on the right",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "breakpoint",
              "description": "Trigger breakpoints for responsive layout, see [Responsive Grid](/vue/component/grid) for details",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "resize-directions",
              "description": "Can replace the native `aside` tag with ResizeBox. This is the `directions` parameter of ResizeBox. For details, please see [ResizeBox](/vue/component/resize-box)",
              "value": {
                "type": "Array<'left' | 'right' | 'top' | 'bottom'>",
                "kind": "expression"
              }
            },
            {
              "name": "hide-trigger",
              "description": "Whether to hide the bottom fold trigger",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "collapse",
              "description": "Events on expand/collapse. There are two ways to trigger click trigger and responsive feedback"
            },
            {
              "name": "breakpoint",
              "description": "Events when a responsive layout breakpoint is triggered"
            }
          ],
          "slots": [
            {
              "name": "trigger",
              "description": "Custom bottom folding trigger"
            }
          ]
        },
        {
          "name": "a-link",
          "attributes": [
            {
              "name": "href",
              "description": "Link address",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Link status",
              "value": {
                "type": "Status",
                "kind": "expression"
              }
            },
            {
              "name": "hoverable",
              "description": "Whether to hide background when hover",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "icon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether the link is in the loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether the link is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Emitted when the link is clicked"
            }
          ],
          "slots": []
        },
        {
          "name": "a-list",
          "attributes": [
            {
              "name": "data",
              "description": "List data, need to be used with `item` slot at the same time",
              "value": {
                "type": "any[]",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "List size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether to show the border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "split",
              "description": "Whether to show the dividing line",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hoverable",
              "description": "Whether to display the selected style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "pagination-props",
              "description": "List pagination configuration",
              "value": {
                "type": "PaginationProps",
                "kind": "expression"
              }
            },
            {
              "name": "grid-props",
              "description": "List grid configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "max-height",
              "description": "Maximum height of the list",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "bottom-offset",
              "description": "Trigger the distance threshold to reach the bottom",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "virtual-list-props",
              "description": "Pass virtual list properties, pass in this parameter to turn on virtual scrolling [VirtualListProps](#VirtualListProps)",
              "value": {
                "type": "VirtualListProps",
                "kind": "expression"
              }
            },
            {
              "name": "scrollbar",
              "description": "Whether to enable virtual scroll bar",
              "value": {
                "type": "boolean | ScrollbarProps",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "scroll",
              "description": "Triggered when the list scrolls"
            },
            {
              "name": "reach-bottom",
              "description": "Triggered when the list reaches the bottom"
            },
            {
              "name": "page-change",
              "description": "Triggered when the table pagination changes"
            },
            {
              "name": "page-size-change",
              "description": "Triggered when the number of data per page of the table changes"
            }
          ],
          "slots": [
            {
              "name": "scroll-loading",
              "description": "When scrolling loading state, scroll to the bottom tip"
            },
            {
              "name": "item",
              "description": "List Item"
            },
            {
              "name": "empty",
              "description": "Empty"
            },
            {
              "name": "footer",
              "description": "Footer"
            },
            {
              "name": "header",
              "description": "Header"
            }
          ]
        },
        {
          "name": "a-list-item",
          "attributes": [
            {
              "name": "action-layout",
              "description": "Operation group arrangement direction",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "meta",
              "description": "Meta data"
            },
            {
              "name": "extra",
              "description": "Extra content"
            },
            {
              "name": "actions",
              "description": "Actions"
            }
          ]
        },
        {
          "name": "a-list-item-meta",
          "attributes": [
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "Description",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "avatar",
              "description": "Avatar"
            },
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "description",
              "description": "Description"
            }
          ]
        },
        {
          "name": "a-mention",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Data for automatic completion",
              "value": {
                "type": "(string | number | SelectOptionData | SelectOptionGroup)[]",
                "kind": "expression"
              }
            },
            {
              "name": "prefix",
              "description": "Keywords that trigger auto-completion",
              "value": {
                "type": "string | string[]",
                "kind": "expression"
              }
            },
            {
              "name": "split",
              "description": "Before and after the selected item separator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "default input or textarea",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow the input to be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the value changes"
            },
            {
              "name": "search",
              "description": "Trigger on dynamic search prefix, version 2.47.0 adds prefix param"
            },
            {
              "name": "select",
              "description": "Triggered when the drop-down option is selected"
            },
            {
              "name": "clear",
              "description": "Triggered when the user clicks the clear button"
            },
            {
              "name": "focus",
              "description": "Emitted when the text box gets focus"
            },
            {
              "name": "blur",
              "description": "Emitted when the text box loses focus"
            }
          ],
          "slots": [
            {
              "name": "option",
              "description": "Display content of options"
            }
          ]
        },
        {
          "name": "a-menu",
          "attributes": [
            {
              "name": "theme",
              "description": "Menu theme",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "mode",
              "description": "The mode of menu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "level-indent",
              "description": "Indentation between levels",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-open",
              "description": "Expand all multi-level menus by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed",
              "description": "Whether to collapse the menu",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-collapsed",
              "description": "Whether to collapse the menu by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapsed-width",
              "description": "Collapse menu width",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "accordion",
              "description": "Turn on the accordion effect",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-scroll-into-view",
              "description": "Whether to automatically scroll the selected item to the visible area",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-collapse-button",
              "description": "Whether built-in folding button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "selected-keys",
              "description": "The selected menu item key array",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-selected-keys",
              "description": "The key array of the menu items selected by default",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "open-keys",
              "description": "Expanded submenu key array",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-open-keys",
              "description": "The default expanded submenu key array",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "scroll-config",
              "description": "Scroll to the configuration items in the visible area and receive all the parameters of [scroll-into-view-if-needed](https://github.com/stipsan/scroll-into-view-if-needed)",
              "value": {
                "type": "{ [key: string]: any }",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "Accept all `Props` of `Trigger` in pop-up mode",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            },
            {
              "name": "tooltip-props",
              "description": "Accept all `Props` of `ToolTip` in pop-up mode",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "auto-open-selected",
              "description": "Expand the selected menus by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "breakpoint",
              "description": "Responsive breakpoints, see [Responsive Grid](/vue/component/grid) for details",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popup-max-height",
              "description": "The maximum height of popover",
              "value": {
                "type": "boolean | number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "collapse",
              "description": "Triggered when the collapsed state changes"
            },
            {
              "name": "menu-item-click",
              "description": "Triggered when the menu item is clicked"
            },
            {
              "name": "sub-menu-click",
              "description": "Triggered when the submenu is clicked"
            }
          ],
          "slots": [
            {
              "name": "collapse-icon",
              "description": "Collapse icon"
            },
            {
              "name": "expand-icon-right",
              "description": "Icon expand right"
            },
            {
              "name": "expand-icon-down",
              "description": "Icon expand down"
            }
          ]
        },
        {
          "name": "a-sub-menu",
          "attributes": [
            {
              "name": "key",
              "description": "Unique key",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "The title of the submenu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "selectable",
              "description": "In the pop-up mode, whether the multi-level menu header is also used as a menu item to support the state such as click to select",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup",
              "description": "Whether to force the use of pop-up mode, `level` indicates the level of the current submenu",
              "value": {
                "type": "boolean | ((level: number) => boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "popup-max-height",
              "description": "The maximum height of popover",
              "value": {
                "type": "boolean | number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "expand-icon-right",
              "description": "Icon expand right"
            },
            {
              "name": "expand-icon-down",
              "description": "Icon expand down"
            },
            {
              "name": "icon",
              "description": "the icon of menu item"
            }
          ]
        },
        {
          "name": "a-menu-item-group",
          "attributes": [
            {
              "name": "title",
              "description": "The title of the menu group",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            }
          ]
        },
        {
          "name": "a-menu-item",
          "attributes": [
            {
              "name": "key",
              "description": "Unique key",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "icon",
              "description": "the icon of menu item"
            }
          ]
        },
        {
          "name": "a-modal",
          "attributes": [
            {
              "name": "visible",
              "description": "Whether the modal is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-visible",
              "description": "Whether the modal is visible by default (uncontrolled state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "The width of the dialog box, if not set, the width value in the style will be used",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "top",
              "description": "The height from the top of the dialog box. It does not take effect when the center display is turned on.",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "mask",
              "description": "Whether to show the mask",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "title-align",
              "description": "horizontal alignment of the title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align-center",
              "description": "Whether the dialog box is displayed in the center",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "unmount-on-close",
              "description": "Whether to uninstall the node when close",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mask-closable",
              "description": "Whether to close the modal when click the mask",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-cancel",
              "description": "Whether to hide the cancel button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "simple",
              "description": "Whether to enable simple mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to show the close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "ok-text",
              "description": "The content of the confirm button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-text",
              "description": "The content of the cancel button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "ok-loading",
              "description": "Whether the confirm button is in the loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "ok-button-props",
              "description": "Props of confirm button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-button-props",
              "description": "Props of cancel button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "footer",
              "description": "Whether to show the footer",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "render-to-body",
              "description": "Whether the modal is mounted under the `body` element",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for modal",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "mask-style",
              "description": "Mask style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "modal-class",
              "description": "The classname of the modal",
              "value": {
                "type": "string | any[]",
                "kind": "expression"
              }
            },
            {
              "name": "modal-style",
              "description": "Modal style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-ok",
              "description": "The callback function before the ok event is triggered. If false is returned, subsequent events will not be triggered, and done can also be used to close asynchronously.",
              "value": {
                "type": "(\n  done: (closed: boolean) => void\n) => void | boolean | Promise<void | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-cancel",
              "description": "The callback function before the cancel event is triggered. If it returns false, no subsequent events will be triggered.",
              "value": {
                "type": "() => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "esc-to-close",
              "description": "Whether to support the ESC key to close the dialog",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "draggable",
              "description": "Whether to support drag",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "fullscreen",
              "description": "Whether to enable full screen",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mask-animation-name",
              "description": "Mask layer animation name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "modal-animation-name",
              "description": "Modal animation name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "body-class",
              "description": "The classname of the modal",
              "value": {
                "type": "string | any[]",
                "kind": "expression"
              }
            },
            {
              "name": "body-style",
              "description": "Modal style",
              "value": {
                "type": "StyleValue",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "ok",
              "description": "Triggered when the OK button is clicked"
            },
            {
              "name": "cancel",
              "description": "Triggered when the cancel/close button is clicked"
            },
            {
              "name": "open",
              "description": "Triggered after the modal is opened (the animation ends)"
            },
            {
              "name": "close",
              "description": "Triggered after the modal is closed (the animation ends)"
            },
            {
              "name": "before-open",
              "description": "Triggered before dialog is opened"
            },
            {
              "name": "before-close",
              "description": "Triggered before dialog is closed"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "footer",
              "description": "Footer"
            }
          ]
        },
        {
          "name": "a-notification",
          "attributes": [],
          "events": [],
          "slots": []
        },
        {
          "name": "a-page-header",
          "attributes": [
            {
              "name": "title",
              "description": "Main title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "subtitle",
              "description": "Subtitle",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-back",
              "description": "Whether to show the back button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "back",
              "description": "Emitted when the back button is clicked"
            }
          ],
          "slots": [
            {
              "name": "breadcrumb",
              "description": "Breadcrumb"
            },
            {
              "name": "back-icon",
              "description": "Back icon"
            },
            {
              "name": "title",
              "description": "Main title"
            },
            {
              "name": "subtitle",
              "description": "Subtitle"
            },
            {
              "name": "extra",
              "description": "Extra content"
            }
          ]
        },
        {
          "name": "a-pagination",
          "attributes": [
            {
              "name": "total",
              "description": "Total number of data",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "current",
              "description": "Current page number",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-current",
              "description": "The default number of pages (uncontrolled state)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "page-size",
              "description": "Number of data items displayed per page",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-page-size",
              "description": "The number of data items displayed per page by default (uncontrolled state)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-single-page",
              "description": "Whether to hide pagination when single page",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "simple",
              "description": "Whether it is simple mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-total",
              "description": "Whether to display the total number of data",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-more",
              "description": "Whether to show more buttons",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-jumper",
              "description": "Whether to show jump",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-page-size",
              "description": "Whether to display the data number selector",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "page-size-options",
              "description": "Selection list of data number selector",
              "value": {
                "type": "number[]",
                "kind": "expression"
              }
            },
            {
              "name": "page-size-props",
              "description": "Props of data number selector",
              "value": {
                "type": "SelectProps",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the page selector",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "page-item-style",
              "description": "The style of the paging button",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "active-page-item-style",
              "description": "The style of the current paging button",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "base-size",
              "description": "Calculate and display the number of omitted bases. Display the omitted number as `baseSize + 2 * bufferSize`",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "buffer-size",
              "description": "When the ellipsis is displayed, the number of page numbers displayed on the left and right of the current page number",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-adjust",
              "description": "Whether to adjust the page number when changing the number of data",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when page number changes"
            },
            {
              "name": "page-size-change",
              "description": "Triggered when the number of data items changes"
            }
          ],
          "slots": [
            {
              "name": "total",
              "description": "Total"
            },
            {
              "name": "page-item-ellipsis",
              "description": "Page item (ellipsis)"
            },
            {
              "name": "page-item-step",
              "description": "Page item (step)"
            },
            {
              "name": "page-item",
              "description": "Page item"
            }
          ]
        },
        {
          "name": "a-popconfirm",
          "attributes": [
            {
              "name": "content",
              "description": "Content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "TriggerPosition",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Whether the popconfirm is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popconfirm is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Types of the popconfirm",
              "value": {
                "type": "MessageType",
                "kind": "expression"
              }
            },
            {
              "name": "ok-text",
              "description": "The content of the ok button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-text",
              "description": "The content of the cancel button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "ok-loading",
              "description": "Whether the ok button is in the loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "ok-button-props",
              "description": "Props of ok button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-button-props",
              "description": "Props of cancel button",
              "value": {
                "type": "ButtonProps",
                "kind": "expression"
              }
            },
            {
              "name": "content-class",
              "description": "The class name of the popup content",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "content-style",
              "description": "The style of the popup content",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-class",
              "description": "The class name of the popup arrow",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-style",
              "description": "The style of the popup arrow",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement | undefined",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-ok",
              "description": "The callback function before the ok event is triggered. If false is returned, subsequent events will not be triggered, and done can also be used to close asynchronously.",
              "value": {
                "type": "(\n  done: (closed: boolean) => void\n) => void | boolean | Promise<void | boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-cancel",
              "description": "The callback function before the cancel event is triggered. If it returns false, no subsequent events will be triggered.",
              "value": {
                "type": "() => boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Triggered when the visible or hidden state of the bubble confirmation box changes"
            },
            {
              "name": "ok",
              "description": "Triggered when the confirm button is clicked"
            },
            {
              "name": "cancel",
              "description": "Triggered when the cancel button is clicked"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "content",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-popover",
          "attributes": [
            {
              "name": "popup-visible",
              "description": "Whether the popover is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popover is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "Content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "TriggerEvent | TriggerEvent[]",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Pop-up position",
              "value": {
                "type": "TriggerPosition",
                "kind": "expression"
              }
            },
            {
              "name": "content-class",
              "description": "The class name of the popup content",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "content-style",
              "description": "The style of the popup content",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-class",
              "description": "The class name of the popup arrow",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-style",
              "description": "The style of the popup arrow",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for pop-up box",
              "value": {
                "type": "string | HTMLElement | null | undefined",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Triggered when the text bubble display status changes"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "content",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-progress",
          "attributes": [
            {
              "name": "type",
              "description": "The type of progress bar",
              "value": {
                "type": "ProgressType",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the progress bar",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "percent",
              "description": "The current percentage of the progress bar",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "steps",
              "description": "Turn on the step bar mode and set the number of steps",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "animation",
              "description": "Whether to turn on the transition animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "stroke-width",
              "description": "The line width of the progress bar",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "The width of the progress bar",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "description": "The color of the progress bar",
              "value": {
                "type": "string|object",
                "kind": "expression"
              }
            },
            {
              "name": "track-color",
              "description": "The color of the progress track",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-text",
              "description": "Whether to display text",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Progress bar status",
              "value": {
                "type": "Status",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-radio",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked",
              "description": "Whether checked by default (uncontrolled state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value",
              "description": "The `value` of the option",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Radio type",
              "value": {
                "type": "RadioType",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            }
          ],
          "slots": [
            {
              "name": "radio",
              "description": "Custom radio"
            }
          ]
        },
        {
          "name": "a-radio-group",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Types of radio group",
              "value": {
                "type": "RadioType",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the radio group",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "Options",
              "value": {
                "type": "Array<string | number | RadioOption>",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "The direction of the radio group",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            }
          ],
          "slots": [
            {
              "name": "radio",
              "description": "Custom radio"
            },
            {
              "name": "label",
              "description": "radio label content"
            }
          ]
        },
        {
          "name": "a-resize-box",
          "attributes": [
            {
              "name": "width",
              "description": "Width",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "height",
              "description": "Height",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "component",
              "description": "The html tag of the telescopic box",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "directions",
              "description": "Can be stretched side, there are up, down, left and right can be used",
              "value": {
                "type": "('left' | 'right' | 'top' | 'bottom')[]",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "moving-start",
              "description": "Triggered when dragging starts"
            },
            {
              "name": "moving",
              "description": "Triggered when dragging"
            },
            {
              "name": "moving-end",
              "description": "Triggered when the drag ends"
            }
          ],
          "slots": [
            {
              "name": "resize-trigger",
              "description": "The contents of the resize pole"
            },
            {
              "name": "resize-trigger-icon",
              "description": "Resize pole icon"
            }
          ]
        },
        {
          "name": "a-rate",
          "attributes": [
            {
              "name": "count",
              "description": "Total number of rate",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default Value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "allow-half",
              "description": "Whether to allow half selection",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "grading",
              "description": "Whether to enable smile grading",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "description": "Whether it is readonly",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "description": "Color",
              "value": {
                "type": "string | Record<string, string>",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            },
            {
              "name": "hover-change",
              "description": "Triggered when the mouse moves over the value"
            }
          ],
          "slots": [
            {
              "name": "character",
              "description": "Character"
            }
          ]
        },
        {
          "name": "a-result",
          "attributes": [
            {
              "name": "status",
              "description": "The status displayed on the result page",
              "value": {
                "type": "ResultStatus",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "subtitle",
              "description": "Subtitle",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "subtitle",
              "description": "Subtitle"
            },
            {
              "name": "extra",
              "description": "Extra"
            },
            {
              "name": "default",
              "description": "Default"
            }
          ]
        },
        {
          "name": "a-scrollbar",
          "attributes": [
            {
              "name": "type",
              "description": "Type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "outer-class",
              "description": "Outer class",
              "value": {
                "type": "string|object|array",
                "kind": "expression"
              }
            },
            {
              "name": "outer-style",
              "description": "Outer style",
              "value": {
                "type": "StyleValue",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "scroll",
              "description": "Triggered when scroll"
            }
          ],
          "slots": []
        },
        {
          "name": "a-overflow-list",
          "attributes": [
            {
              "name": "min",
              "description": "Minimum number of elements to display",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "margin",
              "description": "Item Margin",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "from",
              "description": "Overflow From",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the overflow quantity changes"
            }
          ],
          "slots": [
            {
              "name": "overflow",
              "description": "Overflow"
            }
          ]
        },
        {
          "name": "a-select",
          "attributes": [
            {
              "name": "multiple",
              "description": "Whether to open multi-select mode (The search is turned on by default in the multi-select mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "| string\n| number\n| Record<string, any>\n| (string | number | Record<string, any>)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled mode)",
              "value": {
                "type": "| string\n| number\n| Record<string, unknown>\n| (string | number | Record<string, unknown>)[]",
                "kind": "expression"
              }
            },
            {
              "name": "input-value",
              "description": "The value of the input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-input-value",
              "description": "The default value of the input (uncontrolled mode)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the select",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Placeholder",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-search",
              "description": "Whether to allow searching",
              "value": {
                "type": "boolean | { retainInputValue?: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "allow-create",
              "description": "Whether to allow creation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max-tag-count",
              "description": "In multi-select mode, the maximum number of labels displayed. 0 means unlimited",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether to display the border of the input box",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-active-first-option",
              "description": "Whether to select the first option by default when there is no value",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Whether to show the dropdown",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popup is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "unmount-on-close",
              "description": "Whether to destroy the element when the dropdown is closed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-option",
              "description": "Whether to filter options",
              "value": {
                "type": "boolean | ((inputValue: string, option: SelectOptionData) => boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "Option data",
              "value": {
                "type": "(string | number | SelectOptionData | SelectOptionGroup)[]",
                "kind": "expression"
              }
            },
            {
              "name": "virtual-list-props",
              "description": "Pass the virtual list attribute, pass in this parameter to turn on virtual scrolling [VirtualListProps](#VirtualListProps)",
              "value": {
                "type": "VirtualListProps",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "Trigger props of the drop-down menu",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            },
            {
              "name": "format-label",
              "description": "Format display content",
              "value": {
                "type": "(data: SelectOptionData) => string",
                "kind": "expression"
              }
            },
            {
              "name": "fallback-option",
              "description": "Options that do not exist in custom values",
              "value": {
                "type": "| boolean\n| ((\n    value: string | number | Record<string, unknown>\n  ) => SelectOptionData)",
                "kind": "expression"
              }
            },
            {
              "name": "show-extra-options",
              "description": "Options that do not exist in custom values",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value-key",
              "description": "Used to determine the option key value attribute name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "search-delay",
              "description": "Delay time to trigger search event",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "limit",
              "description": "Maximum number of choices in multiple choice",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Customize fields in `SelectOptionData`",
              "value": {
                "type": "SelectFieldNames",
                "kind": "expression"
              }
            },
            {
              "name": "scrollbar",
              "description": "Whether to enable virtual scroll bar",
              "value": {
                "type": "boolean | ScrollbarProps",
                "kind": "expression"
              }
            },
            {
              "name": "show-header-on-empty",
              "description": "Whether to display the header in the empty state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-footer-on-empty",
              "description": "Whether to display the footer in the empty state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the value changes"
            },
            {
              "name": "input-value-change",
              "description": "Triggered when the value of the input changes"
            },
            {
              "name": "popup-visible-change",
              "description": "Triggered when the display state of the drop-down box changes"
            },
            {
              "name": "clear",
              "description": "Triggered when the clear button is clicked"
            },
            {
              "name": "remove",
              "description": "Triggered when the delete button of the label is clicked"
            },
            {
              "name": "search",
              "description": "Triggered when the user searches"
            },
            {
              "name": "dropdown-scroll",
              "description": "Triggered when the drop-down scrolls"
            },
            {
              "name": "dropdown-reach-bottom",
              "description": "Triggered when the drop-down menu is scrolled to the bottom"
            },
            {
              "name": "exceed-limit",
              "description": "Triggered when multiple selection exceeds the limit"
            }
          ],
          "slots": [
            {
              "name": "trigger",
              "description": "Custom trigger element"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            },
            {
              "name": "search-icon",
              "description": "Search icon for select box"
            },
            {
              "name": "loading-icon",
              "description": "Loading icon for select box"
            },
            {
              "name": "arrow-icon",
              "description": "Arrow icon for select box"
            },
            {
              "name": "footer",
              "description": "The footer of the drop-down box"
            },
            {
              "name": "header",
              "description": "The header of the drop-down box"
            },
            {
              "name": "label",
              "description": "Display content of label"
            },
            {
              "name": "option",
              "description": "Display content of options"
            },
            {
              "name": "empty",
              "description": "Display content when the option is empty"
            }
          ]
        },
        {
          "name": "a-option",
          "attributes": [
            {
              "name": "value",
              "description": "Option value (if not filled, it will be obtained from the content)",
              "value": {
                "type": "string|number|object",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "Option label (if not filled, it will be obtained from the content)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tag-props",
              "description": "Displayed tag attributes",
              "value": {
                "type": "TagProps",
                "kind": "expression"
              }
            },
            {
              "name": "extra",
              "description": "Extra data",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "index",
              "description": "index for manually specifying option",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-optgroup",
          "attributes": [
            {
              "name": "label",
              "description": "Title of option group",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "label",
              "description": "Title of option group"
            }
          ]
        },
        {
          "name": "a-skeleton",
          "attributes": [
            {
              "name": "loading",
              "description": "Whether to display the skeleton screen (loading state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "animation",
              "description": "Whether to enable skeleton screen animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-skeleton-line",
          "attributes": [
            {
              "name": "rows",
              "description": "Number of rows displayed",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "widths",
              "description": "The width of the line skeleton",
              "value": {
                "type": "Array<number | string>",
                "kind": "expression"
              }
            },
            {
              "name": "line-height",
              "description": "Line height of the line skeleton",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "line-spacing",
              "description": "Line spacing of line skeleton",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-skeleton-shape",
          "attributes": [
            {
              "name": "shape",
              "description": "The shape of the shape skeleton",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the shape skeleton",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "a-slider",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "number | [number, number]",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "number | [number, number]",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "description": "Sliding step",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "description": "Minimum sliding range",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "marks",
              "description": "Set the displayed label",
              "value": {
                "type": "Record<number, string>",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "Maximum sliding range",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "The direction of the slider",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-ticks",
              "description": "Whether to show ticks",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-input",
              "description": "Whether to show the input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "range",
              "description": "Whether to use range selection",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-tooltip",
              "description": "Whether to show tooltip",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-space",
          "attributes": [
            {
              "name": "align",
              "description": "Alignment",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "Spacing direction",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Spacing size, support for setting horizontal and vertical spacing separately",
              "value": {
                "type": "number | 'mini' | 'small' | 'medium' | 'large' | [SpaceSize, SpaceSize]",
                "kind": "expression"
              }
            },
            {
              "name": "wrap",
              "description": "The spacing of the wrapping type, used in the scene of wrapping.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "fill",
              "description": "fill the block",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "split",
              "description": "Set separator"
            }
          ]
        },
        {
          "name": "a-spin",
          "attributes": [
            {
              "name": "size",
              "description": "Size",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state (Only effective in container mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "dot",
              "description": "Whether to use dot type animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tip",
              "description": "Prompt content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-icon",
              "description": "Whether to hide the icon",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "tip",
              "description": "Custom tip"
            },
            {
              "name": "element",
              "description": "Custom element"
            },
            {
              "name": "icon",
              "description": "Custom icon (auto-rotation)"
            }
          ]
        },
        {
          "name": "a-split",
          "attributes": [
            {
              "name": "component",
              "description": "The html tag of the split box",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "Direction of division",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the segmentation, it can be 0~1 representing a percentage, or a specific number of pixels, such as 300px",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "default-size",
              "description": "Default split size, it can be 0~1 representing a percentage, or a specific number of pixels, such as 300px",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "description": "Minimum threshold, it can be 0~1 representing a percentage, or a specific number of pixels, such as 300px",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "Maximum threshold, it can be 0~1 representing a percentage, or a specific number of pixels, such as 300px",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "move-start",
              "description": "Triggered before dragging"
            },
            {
              "name": "moving",
              "description": "Triggered when dragging"
            },
            {
              "name": "move-end",
              "description": "Triggered after dragging ends"
            }
          ],
          "slots": [
            {
              "name": "first",
              "description": "The contents of the first panel"
            },
            {
              "name": "resize-trigger",
              "description": "The contents of the resize pole"
            },
            {
              "name": "resize-trigger-icon",
              "description": "Resize pole icon"
            },
            {
              "name": "second",
              "description": "The contents of the second panel"
            }
          ]
        },
        {
          "name": "a-statistic",
          "attributes": [
            {
              "name": "title",
              "description": "Title of the numerical display",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "value",
              "description": "Numerical display value",
              "value": {
                "type": "number | Date",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "description": "Format of numerical display [dayjs](https://day.js.org/docs/en/display/format) (used in date mode)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "extra",
              "description": "Additional display content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "start",
              "description": "Whether to start animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "precision",
              "description": "Decimal reserved digits (used in digital mode)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "separator",
              "description": "Carry separator (used in number mode)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-group-separator",
              "description": "Whether to display the carry separator (used in number mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "animation",
              "description": "Whether to turn on animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "animation-duration",
              "description": "Animation's duration time",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "value-from",
              "description": "The starting value of the animation",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Prompt text (displayed when value is undefined )",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "value-style",
              "description": "Custom value style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            },
            {
              "name": "suffix",
              "description": "Suffix"
            },
            {
              "name": "extra",
              "description": "Extra content"
            }
          ]
        },
        {
          "name": "a-countdown",
          "attributes": [
            {
              "name": "title",
              "description": "Countdown title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "value",
              "description": "Countdown value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "now",
              "description": "Used to correct the incorrect display of the initialization time",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "description": "Countdown display format [dayjs](https://day.js.org/docs/en/display/format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "start",
              "description": "Whether to start the countdown",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value-style",
              "description": "Custom value style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "finish",
              "description": "Callback at the end of the countdown"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            }
          ]
        },
        {
          "name": "a-steps",
          "attributes": [
            {
              "name": "type",
              "description": "The type of the steps",
              "value": {
                "type": "StepsType",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "The direction of the steps",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "label-placement",
              "description": "The location where the label description is placed.",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "current",
              "description": "Number of current step",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "default-current",
              "description": "The default number of step (uncontrolled state)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "The status of the current step",
              "value": {
                "type": "StepStatus",
                "kind": "expression"
              }
            },
            {
              "name": "line-less",
              "description": "Whether to use the connectionless style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "small",
              "description": "Whether to use a small step bar",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "changeable",
              "description": "Whether you can click to switch",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the number of steps changes"
            }
          ],
          "slots": []
        },
        {
          "name": "a-step",
          "attributes": [
            {
              "name": "title",
              "description": "Title of the step",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "Description of the step",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "Status of the step",
              "value": {
                "type": "StepStatus",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "node",
              "description": "Node"
            },
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "description",
              "description": "Description"
            }
          ]
        },
        {
          "name": "a-switch",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string|number|boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked",
              "description": "Default selected state (uncontrolled state)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Type of switch",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Size of switch",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "checked-value",
              "description": "Value when checked",
              "value": {
                "type": "string|number|boolean",
                "kind": "expression"
              }
            },
            {
              "name": "unchecked-value",
              "description": "Value when unchecked",
              "value": {
                "type": "string|number|boolean",
                "kind": "expression"
              }
            },
            {
              "name": "checked-color",
              "description": "The color of the switch when checked",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "unchecked-color",
              "description": "The color of the switch when unchecked",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "before-change",
              "description": "before-change hook before the switch state changes. If false is returned or a Promise is returned and then is rejected, will stop switching",
              "value": {
                "type": "(\n  newValue: string | number | boolean\n) => Promise<boolean | void> | boolean | void",
                "kind": "expression"
              }
            },
            {
              "name": "checked-text",
              "description": "Copywriting when opened (not effective when `type='line'` and `size='small'`)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "unchecked-text",
              "description": "Copywriting when closed (not effective when `type='line'` and `size='small'`)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            },
            {
              "name": "focus",
              "description": "Triggered when the component gets focus"
            },
            {
              "name": "blur",
              "description": "Fired when the component loses focus"
            }
          ],
          "slots": [
            {
              "name": "checked-icon",
              "description": "The icon on the button when opened"
            },
            {
              "name": "unchecked-icon",
              "description": "The icon on the button when closed"
            },
            {
              "name": "checked",
              "description": "Copywriting when opened (not effective when `type='line'` and `size='small'`)"
            },
            {
              "name": "unchecked",
              "description": "Copywriting when closed (not effective when `type='line'` and `size='small'`)"
            }
          ]
        },
        {
          "name": "a-tabs",
          "attributes": [
            {
              "name": "active-key",
              "description": "The `key` of the currently selected label",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "default-active-key",
              "description": "The `key` of the tab selected by default (uncontrolled state, select the first tab page when it is empty)",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Position of the tab",
              "value": {
                "type": "TabsPosition",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the tab",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "The type of tab",
              "value": {
                "type": "TabsType",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "The direction of tab",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "description": "Whether to enable editable mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-add-button",
              "description": "Whether to display the add button (only available in editable mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-hide",
              "description": "Whether to destroy the content when the label is not displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "lazy-load",
              "description": "Whether to mount the content when the label is first displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "justify",
              "description": "The height of the container is fully supported, and it only takes effect in horizontal mode.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "animation",
              "description": "Whether to enable option content transition animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "header-padding",
              "description": "Whether there is a horizontal margin on the header of the tab. Only valid for tabs with `type` equal to `line` and `text` type",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-switch",
              "description": "Whether to switch to a new tab after creating a tab (the last one)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-content",
              "description": "Whether to hide content",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "TabTriggerEvent",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the current tag value changes"
            },
            {
              "name": "tab-click",
              "description": "Triggered when the user clicks on the tab"
            },
            {
              "name": "add",
              "description": "Triggered when the user clicks the add button"
            },
            {
              "name": "delete",
              "description": "Triggered when the user clicks the delete button"
            }
          ],
          "slots": [
            {
              "name": "extra",
              "description": "Additional tab content"
            }
          ]
        },
        {
          "name": "a-tab-pane",
          "attributes": [
            {
              "name": "title",
              "description": "Title of the tab",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether to allow this tab to be closed (only effective in editable mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-hide",
              "description": "Whether to destroy the content when the label is not displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "title",
              "description": "Tab title"
            }
          ]
        },
        {
          "name": "a-table",
          "attributes": [
            {
              "name": "columns",
              "description": "Column info of the table",
              "value": {
                "type": "TableColumnData[]",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Table data",
              "value": {
                "type": "TableData[]",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether to show the border",
              "value": {
                "type": "boolean | TableBorder",
                "kind": "expression"
              }
            },
            {
              "name": "hoverable",
              "description": "Whether to show the hover effect",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "stripe",
              "description": "Whether to enable the stripe effect",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the table",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "table-layout-fixed",
              "description": "The table-layout property of the table is set to fixed. After it is set to fixed, the width of the table will not be stretched beyond 100% by the content.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean|object",
                "kind": "expression"
              }
            },
            {
              "name": "row-selection",
              "description": "Table row selector configuration",
              "value": {
                "type": "TableRowSelection",
                "kind": "expression"
              }
            },
            {
              "name": "expandable",
              "description": "Expand row configuration of the table",
              "value": {
                "type": "TableExpandable",
                "kind": "expression"
              }
            },
            {
              "name": "scroll",
              "description": "Scrolling attribute configuration of the table. The `2.13.0` version adds support for character values. `2.20.0` version adds support for `minWidth`, `maxHeight`.",
              "value": {
                "type": "{\n  x?: number | string;\n  y?: number | string;\n  minWidth?: number | string;\n  maxHeight?: number | string;\n}",
                "kind": "expression"
              }
            },
            {
              "name": "pagination",
              "description": "Pagination properties configuration",
              "value": {
                "type": "boolean | PaginationProps",
                "kind": "expression"
              }
            },
            {
              "name": "page-position",
              "description": "The position of the page selector",
              "value": {
                "type": "TablePagePosition",
                "kind": "expression"
              }
            },
            {
              "name": "indent-size",
              "description": "The indentation distance of the tree table",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "row-key",
              "description": "Value field of table row `key`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-header",
              "description": "Whether to show the header",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "virtual-list-props",
              "description": "Pass the virtual list attribute, pass in this parameter to turn on virtual scrolling [VirtualListProps](#VirtualListProps)",
              "value": {
                "type": "VirtualListProps",
                "kind": "expression"
              }
            },
            {
              "name": "span-method",
              "description": "Cell merge method (The index starts counting from the data item)",
              "value": {
                "type": "(data: {\n  record: TableData;\n  column: TableColumnData | TableOperationColumn;\n  rowIndex: number;\n  columnIndex: number;\n}) => { rowspan?: number; colspan?: number } | void",
                "kind": "expression"
              }
            },
            {
              "name": "span-all",
              "description": "Whether to make the index of the span method contain all",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load-more",
              "description": "Data lazy loading function, open the lazy loading function when it is passed in",
              "value": {
                "type": "(record: TableData, done: (children?: TableData[]) => void) => void",
                "kind": "expression"
              }
            },
            {
              "name": "filter-icon-align-left",
              "description": "Whether the filter icon is aligned to the left",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-expand-button-on-empty",
              "description": "Whether to hide expand button when subtree is empty",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "row-class",
              "description": "The class name of the table row element. The `2.34.0` version adds support for function values.",
              "value": {
                "type": "| string\n| any[]\n| Record<string, any>\n| ((record: TableData, rowIndex: number) => any)",
                "kind": "expression"
              }
            },
            {
              "name": "draggable",
              "description": "Table drag and drop sorting configuration",
              "value": {
                "type": "TableDraggable",
                "kind": "expression"
              }
            },
            {
              "name": "column-resizable",
              "description": "Whether to allow the column width to be adjusted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "summary",
              "description": "Show footer summary row",
              "value": {
                "type": "| boolean\n| ((params: {\n    columns: TableColumnData[];\n    data: TableData[];\n  }) => TableData[])",
                "kind": "expression"
              }
            },
            {
              "name": "summary-text",
              "description": "The first column of text in the summary line",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "summary-span-method",
              "description": "Cell Merge Method for Summarizing Rows",
              "value": {
                "type": "(data: {\n  record: TableData;\n  column: TableColumnData | TableOperationColumn;\n  rowIndex: number;\n  columnIndex: number;\n}) => { rowspan?: number; colspan?: number } | void",
                "kind": "expression"
              }
            },
            {
              "name": "selected-keys",
              "description": "Selected row (controlled mode) takes precedence over `rowSelection`",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-selected-keys",
              "description": "The selected row by default (uncontrolled mode) takes precedence over `rowSelection`",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "expanded-keys",
              "description": "Displayed Expanded Row, Subtree (Controlled Mode) takes precedence over `expandable`",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-expanded-keys",
              "description": "Expand row, Subtree displayed by default (Uncontrolled mode) takes precedence over `expandable`",
              "value": {
                "type": "(string | number)[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-all-rows",
              "description": "Whether to expand all rows by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "sticky-header",
              "description": "Whether to open the sticky header",
              "value": {
                "type": "boolean|number",
                "kind": "expression"
              }
            },
            {
              "name": "scrollbar",
              "description": "Whether to enable virtual scroll bar",
              "value": {
                "type": "boolean | ScrollbarProps",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "expand",
              "description": "Triggered when a row is clicked to expand"
            },
            {
              "name": "expanded-change",
              "description": "Triggered when the expanded data row changes"
            },
            {
              "name": "select",
              "description": "Triggered when the row selector is clicked"
            },
            {
              "name": "select-all",
              "description": "Triggered when the select all selector is clicked"
            },
            {
              "name": "selection-change",
              "description": "Triggered when the selected data row changes"
            },
            {
              "name": "sorter-change",
              "description": "Triggered when the collation changes"
            },
            {
              "name": "filter-change",
              "description": "Triggered when the filter options are changed"
            },
            {
              "name": "page-change",
              "description": "Triggered when the table pagination changes"
            },
            {
              "name": "page-size-change",
              "description": "Triggered when the number of data per page of the table changes"
            },
            {
              "name": "change",
              "description": "Triggered when table data changes"
            },
            {
              "name": "cell-mouse-enter",
              "description": "Triggered when hovering into a cell"
            },
            {
              "name": "cell-mouse-leave",
              "description": "Triggered when hovering out of a cell"
            },
            {
              "name": "cell-click",
              "description": "Triggered when a cell is clicked"
            },
            {
              "name": "row-click",
              "description": "Triggered when row data is clicked"
            },
            {
              "name": "header-click",
              "description": "Triggered when the header data is clicked"
            },
            {
              "name": "column-resize",
              "description": "Triggered when column width is adjusted"
            },
            {
              "name": "row-dblclick",
              "description": "Triggered when row data is double clicked"
            },
            {
              "name": "cell-dblclick",
              "description": "Triggered when a cell is double clicked"
            },
            {
              "name": "row-contextmenu",
              "description": "Triggered when row data is right clicked"
            },
            {
              "name": "cell-contextmenu",
              "description": "Triggered when a cell is right clicked"
            }
          ],
          "slots": [
            {
              "name": "th",
              "description": "Custom th element"
            },
            {
              "name": "thead",
              "description": "Custom thead element"
            },
            {
              "name": "empty",
              "description": "Empty"
            },
            {
              "name": "summary-cell",
              "description": "Content on the right side of the pagination"
            },
            {
              "name": "pagination-right",
              "description": "Content on the right side of the pagination"
            },
            {
              "name": "pagination-left",
              "description": "Content on the left side of the pagination"
            },
            {
              "name": "td",
              "description": "Custom td element"
            },
            {
              "name": "tr",
              "description": "Custom tr element"
            },
            {
              "name": "tbody",
              "description": "Custom tbody element"
            },
            {
              "name": "drag-handle-icon",
              "description": "Drag handle icon"
            },
            {
              "name": "footer",
              "description": "Table Footer"
            },
            {
              "name": "expand-row",
              "description": "Expand row content"
            },
            {
              "name": "expand-icon",
              "description": "Expand row icon"
            },
            {
              "name": "columns",
              "description": "Table column definitions. When enabled, the columns attribute is masked"
            }
          ]
        },
        {
          "name": "a-table-column",
          "attributes": [
            {
              "name": "data-index",
              "description": "Identifies the column information, corresponding to the data in TableData",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Column title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "Column width",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "description": "Alignment direction",
              "value": {
                "type": "TableColumnData['align']",
                "kind": "expression"
              }
            },
            {
              "name": "fixed",
              "description": "Fixed position",
              "value": {
                "type": "TableColumnData['fixed']",
                "kind": "expression"
              }
            },
            {
              "name": "ellipsis",
              "description": "Whether to display as omitted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "sortable",
              "description": "Sorting related options",
              "value": {
                "type": "TableSortable",
                "kind": "expression"
              }
            },
            {
              "name": "filterable",
              "description": "Filter related options",
              "value": {
                "type": "TableFilterable",
                "kind": "expression"
              }
            },
            {
              "name": "cell-class",
              "description": "Custom cell class",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "header-cell-class",
              "description": "Custom cell class",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "body-cell-class",
              "description": "Custom cell class",
              "value": {
                "type": "ClassName | ((record: TableData) => ClassName)",
                "kind": "expression"
              }
            },
            {
              "name": "summary-cell-class",
              "description": "Customize summary column cell class",
              "value": {
                "type": "ClassName | ((record: TableData) => ClassName)",
                "kind": "expression"
              }
            },
            {
              "name": "cell-style",
              "description": "Custom cell style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "header-cell-style",
              "description": "Custom cell style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "body-cell-style",
              "description": "Custom cell style",
              "value": {
                "type": "CSSProperties | ((record: TableData) => CSSProperties)",
                "kind": "expression"
              }
            },
            {
              "name": "summary-cell-style",
              "description": "Customize summary column cell style",
              "value": {
                "type": "CSSProperties | ((record: TableData) => CSSProperties)",
                "kind": "expression"
              }
            },
            {
              "name": "index",
              "description": "index for manually specifying option. Manual specification is no longer required after version 2.26.0",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "tooltip",
              "description": "Whether to show text hints when omitted",
              "value": {
                "type": "boolean|object",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "filter-icon",
              "description": "Title"
            },
            {
              "name": "filter-content",
              "description": "Title"
            },
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "cell",
              "description": "Cell"
            }
          ]
        },
        {
          "name": "a-textarea",
          "attributes": [
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value (uncontrolled state)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Placeholder",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max-length",
              "description": "Maximum length of input value, the errorOnly attribute was added in version 2.12.0",
              "value": {
                "type": "number | { length: number; errorOnly?: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "show-word-limit",
              "description": "Whether to display word count",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clearing the text",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-size",
              "description": "Whether to make the textarea adapt to the height of the content",
              "value": {
                "type": "boolean | { minRows?: number; maxRows?: number }",
                "kind": "expression"
              }
            },
            {
              "name": "word-length",
              "description": "Calculation method of word length",
              "value": {
                "type": "(value: string) => number",
                "kind": "expression"
              }
            },
            {
              "name": "word-slice",
              "description": "Character interception method, used together with wordLength",
              "value": {
                "type": "(value: string, maxLength: number) => string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "input",
              "description": "Emitted when the user enters"
            },
            {
              "name": "change",
              "description": "Only emitted when the textarea is out of focus"
            },
            {
              "name": "clear",
              "description": "Emitted when the clear button is clicked"
            },
            {
              "name": "focus",
              "description": "Emitted when the textarea gets focus"
            },
            {
              "name": "blur",
              "description": "Emitted when the textarea loses focus"
            }
          ],
          "slots": []
        },
        {
          "name": "a-time-picker",
          "attributes": [
            {
              "name": "type",
              "description": "Selector type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string | number | Date | Array<string | number | Date>",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value",
              "value": {
                "type": "string | number | Date | Array<string | number | Date>",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "description": "Whether it is read-only mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "description": "Display the format of the date, refer to [String Parsing Format](#String Parsing Format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Prompt copy",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Input box size",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for pop-up box",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "use12-hours",
              "description": "12 hour clock",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "description": "Set the hour/minute/second selection interval",
              "value": {
                "type": "{\n  hour?: number;\n  minute?: number;\n  second?: number;\n}",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-hours",
              "description": "Disabled partial hour options",
              "value": {
                "type": "() => number[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-minutes",
              "description": "Disabled some minutes options",
              "value": {
                "type": "(selectedHour?: number) => number[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-seconds",
              "description": "Disabled partial seconds option",
              "value": {
                "type": "(selectedHour?: number, selectedMinute?: number) => number[]",
                "kind": "expression"
              }
            },
            {
              "name": "hide-disabled-options",
              "description": "Hide prohibited options",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disable-confirm",
              "description": "Disable the confirmation step, click the time directly after opening, without clicking the confirmation button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Pop-up position",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Control the pop-up box to open or close",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "The pop-up box is opened or closed by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "You can pass in the parameters of the `Trigger` component",
              "value": {
                "type": "TriggerProps",
                "kind": "expression"
              }
            },
            {
              "name": "unmount-on-close",
              "description": "Whether to destroy the dom structure after closing",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "The component value changes"
            },
            {
              "name": "select",
              "description": "Select time but do not trigger component value change"
            },
            {
              "name": "clear",
              "description": "Click the clear button"
            },
            {
              "name": "popup-visible-change",
              "description": "Pop-up box expand and collapse"
            }
          ],
          "slots": [
            {
              "name": "prefix",
              "description": "Input box prefix"
            },
            {
              "name": "suffix-icon",
              "description": "Input box suffix icon"
            },
            {
              "name": "extra",
              "description": "Extra footer"
            }
          ]
        },
        {
          "name": "a-tag",
          "attributes": [
            {
              "name": "color",
              "description": "Label color",
              "value": {
                "type": "TagColor | string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "Label size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "bordered",
              "description": "Whether the tag is bordered",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "visible",
              "description": "Whether the tag is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-visible",
              "description": "Whether the tag is visible by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether the tag is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "description": "Whether the tag can be closed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "checkable",
              "description": "Whether the tag can be checked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "checked",
              "description": "Whether the tag is checked (available when the tag is checkable)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked",
              "description": "Whether the tag is checked by default (available when the tag is checkable)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Emitted when the close button is clicked"
            },
            {
              "name": "check",
              "description": "Emitted when the user check (emit only in the checkable mode)"
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "Icon"
            },
            {
              "name": "close-icon",
              "description": "Close button icon"
            }
          ]
        },
        {
          "name": "a-timeline",
          "attributes": [
            {
              "name": "reverse",
              "description": "Whether reverse order",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "description": "Timeline direction",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "mode",
              "description": "The display mode of Timeline",
              "value": {
                "type": "ModeType",
                "kind": "expression"
              }
            },
            {
              "name": "pending",
              "description": "Whether to display ghost nodes. When set to true, only ghost nodes are displayed. When passed to ReactNode, it will be displayed as node content",
              "value": {
                "type": "boolean|string",
                "kind": "expression"
              }
            },
            {
              "name": "label-position",
              "description": "Position of label text",
              "value": {
                "type": "LabelPositionType",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "dot",
              "description": "Custom dot"
            }
          ]
        },
        {
          "name": "a-timeline-item",
          "attributes": [
            {
              "name": "dot-color",
              "description": "Dot color",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "dot-type",
              "description": "Dot type",
              "value": {
                "type": "DotType",
                "kind": "expression"
              }
            },
            {
              "name": "line-type",
              "description": "Line type",
              "value": {
                "type": "LineType",
                "kind": "expression"
              }
            },
            {
              "name": "line-color",
              "description": "Line Color",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "Label text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Item position",
              "value": {
                "type": "PositionType",
                "kind": "expression"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "dot",
              "description": "Custom dot"
            }
          ]
        },
        {
          "name": "a-tooltip",
          "attributes": [
            {
              "name": "popup-visible",
              "description": "Whether the tooltip is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the tooltip is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "Tooltip content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "TriggerPosition",
                "kind": "expression"
              }
            },
            {
              "name": "mini",
              "description": "Whether to display as a mini size",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "background-color",
              "description": "Background color of the popover",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content-class",
              "description": "The class name of the popup content",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "content-style",
              "description": "The style of the popup content",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-class",
              "description": "The class name of the popup arrow",
              "value": {
                "type": "ClassName",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-style",
              "description": "The style of the popup arrow",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement | null | undefined",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Emitted when the tooltip display status changes"
            }
          ],
          "slots": [
            {
              "name": "content",
              "description": "Content"
            }
          ]
        },
        {
          "name": "a-transfer",
          "attributes": [
            {
              "name": "data",
              "description": "Data of the transfer",
              "value": {
                "type": "TransferItem[]",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value in the target selection box",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "The default value in the target selection box (uncontrolled state)",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "selected",
              "description": "Selected option value",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-selected",
              "description": "The option value selected by default (uncontrolled state)",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "simple",
              "description": "Whether to open the simple mode (click the option to move)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "one-way",
              "description": "Whether to open the one-way mode (only move to the target selection box)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-search",
              "description": "Whether to show the search input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-select-all",
              "description": "Whether show select all checkbox on the header",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "The title of the source and target selection boxes",
              "value": {
                "type": "string[]",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggered when the value of the target selection box changes"
            },
            {
              "name": "select",
              "description": "Triggered when the selected value changes"
            },
            {
              "name": "search",
              "description": "Triggered when the user searches"
            }
          ],
          "slots": [
            {
              "name": "source",
              "description": "Source content"
            },
            {
              "name": "source-title",
              "description": "Source Header"
            },
            {
              "name": "target",
              "description": "Target content"
            },
            {
              "name": "target-title",
              "description": "Target Header"
            },
            {
              "name": "item",
              "description": "Option"
            }
          ]
        },
        {
          "name": "a-tree-select",
          "attributes": [
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "description": "Whether it is loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "Whether it is an error state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "The size of the selection box.",
              "value": {
                "type": "Size",
                "kind": "expression"
              }
            },
            {
              "name": "border",
              "description": "Whether to show the border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-search",
              "description": "Whether to allow searching",
              "value": {
                "type": "boolean | { retainInputValue?: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "allow-clear",
              "description": "Whether to allow clear",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "Prompt copy",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "max-tag-count",
              "description": "The maximum number of labels displayed, only valid in multi-select mode",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "Whether to support multiple selection",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "Default value",
              "value": {
                "type": "string | number | Array<string | number> | LabelValue | LabelValue[]",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "description": "Value",
              "value": {
                "type": "string | number | Array<string | number> | LabelValue | LabelValue[]",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Specify the field name in the node data",
              "value": {
                "type": "TreeFieldNames",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Data",
              "value": {
                "type": "TreeNodeData[]",
                "kind": "expression"
              }
            },
            {
              "name": "label-in-value",
              "description": "Set the value format. The default is string, when set to true, the value format is: {label: string, value: string}",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tree-checkable",
              "description": "Whether to show checkbox",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tree-check-strictly",
              "description": "Whether the parent and child nodes are related",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tree-checked-strategy",
              "description": "Customized echo method",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "tree-props",
              "description": "Can accept Props of all [Tree](/vue/component/tree) components",
              "value": {
                "type": "Partial<TreeProps>",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-props",
              "description": "Can accept Props of all [Trigger](/vue/component/trigger) components",
              "value": {
                "type": "Partial<TriggerProps>",
                "kind": "expression"
              }
            },
            {
              "name": "popup-visible",
              "description": "Whether the pop-up box is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the default pop-up box is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "dropdown-style",
              "description": "Drop-down box style",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "dropdown-class-name",
              "description": "Drop-down box style class",
              "value": {
                "type": "string | string[]",
                "kind": "expression"
              }
            },
            {
              "name": "filter-tree-node",
              "description": "Custom node filter function",
              "value": {
                "type": "(searchKey: string, nodeData: TreeNodeData) => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load-more",
              "description": "Load data dynamically",
              "value": {
                "type": "(nodeData: TreeNodeData) => Promise<void>",
                "kind": "expression"
              }
            },
            {
              "name": "disable-filter",
              "description": "Disable internal filtering logic",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for pop-up box",
              "value": {
                "type": "string | HTMLElement | undefined",
                "kind": "expression"
              }
            },
            {
              "name": "fallback-option",
              "description": "Customize node data for keys that do not match options",
              "value": {
                "type": "boolean | ((key: number | string) => TreeNodeData | boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "selectable",
              "description": "Set the nodes that can be selected, all can be selected by default",
              "value": {
                "type": "| boolean\n| 'leaf'\n| ((\n    node: TreeNodeData,\n    info: { isLeaf: boolean; level: number }\n  ) => boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "scrollbar",
              "description": "Whether to enable virtual scroll bar",
              "value": {
                "type": "boolean | ScrollbarProps",
                "kind": "expression"
              }
            },
            {
              "name": "show-header-on-empty",
              "description": "Whether to display the header in the empty state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-footer-on-empty",
              "description": "Whether to display the footer in the empty state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Trigger when the value changes"
            },
            {
              "name": "popup-visible-change",
              "description": "Triggered when the status of the drop-down box changes"
            },
            {
              "name": "search",
              "description": "Triggered when the search value changes"
            },
            {
              "name": "clear",
              "description": "Triggered when clear is clicked"
            }
          ],
          "slots": [
            {
              "name": "trigger",
              "description": "Custom trigger element"
            },
            {
              "name": "prefix",
              "description": "Prefix"
            },
            {
              "name": "label",
              "description": "Custom Label"
            },
            {
              "name": "header",
              "description": "The header of the drop-down box"
            },
            {
              "name": "loader",
              "description": "Customizing the content displayed during loading"
            },
            {
              "name": "empty",
              "description": "Custom empty data display"
            },
            {
              "name": "footer",
              "description": "The footer of the drop-down box"
            },
            {
              "name": "tree-slot-extra",
              "description": "Render additional node content of the tree component"
            },
            {
              "name": "tree-slot-title",
              "description": "Custom the node title of the tree component"
            },
            {
              "name": "tree-slot-icon",
              "description": "Custom node icon for the tree component"
            },
            {
              "name": "tree-slot-switcher-icon",
              "description": "Custom switcher icon for the tree component"
            }
          ]
        },
        {
          "name": "a-tree",
          "attributes": [
            {
              "name": "size",
              "description": "Size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "block-node",
              "description": "Whether the node occupies a row",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-all",
              "description": "Whether to expand the parent node by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "Whether to support multiple selection",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "checkable",
              "description": "Whether to add a checkbox before the node, function format is supported since `2.27.0`",
              "value": {
                "type": "| boolean\n| ((\n    node: TreeNodeData,\n    info: {\n      level: number;\n      isLeaf: boolean;\n    }\n  ) => boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "selectable",
              "description": "Whether to support selection, function format is supported since `2.27.0`",
              "value": {
                "type": "| boolean\n| ((\n    node: TreeNodeData,\n    info: {\n      level: number;\n      isLeaf: boolean;\n    }\n  ) => boolean)",
                "kind": "expression"
              }
            },
            {
              "name": "check-strictly",
              "description": "Whether to cancel the parent-child node association",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "checked-strategy",
              "description": "Customized backfill method <br/> all: return all selected nodes <br/> parent: return only parent node when both parent and child nodes are selected <br/> child: return only child nodes",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-selected-keys",
              "description": "Tree node selected by default",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "selected-keys",
              "description": "Selected tree node",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked-keys",
              "description": "Tree node with checkbox selected by default",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "checked-keys",
              "description": "Tree node with check box selected",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "default-expanded-keys",
              "description": "Nodes expanded by default",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "expanded-keys",
              "description": "Expanded node",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Pass in `data` to generate the corresponding tree structure",
              "value": {
                "type": "TreeNodeData[]",
                "kind": "expression"
              }
            },
            {
              "name": "field-names",
              "description": "Specify the field name in the node data",
              "value": {
                "type": "TreeFieldNames",
                "kind": "expression"
              }
            },
            {
              "name": "show-line",
              "description": "Whether to display the connection line",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load-more",
              "description": "A callback for loading data asynchronously, returning a `Promise`",
              "value": {
                "type": "(node: TreeNodeData) => Promise<void>",
                "kind": "expression"
              }
            },
            {
              "name": "draggable",
              "description": "Whether it can be dragged",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-drop",
              "description": "Whether to allow release on a node when dragging",
              "value": {
                "type": "(options: {\n  dropNode: TreeNodeData;\n  dropPosition: -1 | 0 | 1;\n}) => boolean",
                "kind": "expression"
              }
            },
            {
              "name": "virtual-list-props",
              "description": "Pass virtual list properties, pass in this parameter to turn on virtual scrolling, [VirtualListProps](#VirtualListProps)",
              "value": {
                "type": "VirtualListProps",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-selected",
              "description": "Whether to expand the parent node of the selected node by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-checked",
              "description": "Whether to expand the parent node of the checked node by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-expand-parent",
              "description": "Whether to automatically expand the parent node of the expanded node",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "half-checked-keys",
              "description": "The keys of half checked. Only valid when checkable and checkStrictly",
              "value": {
                "type": "Array<string | number>",
                "kind": "expression"
              }
            },
            {
              "name": "only-check-leaf",
              "description": "When enabled, checkedKeys is only for checked leaf nodes, and the status of the parent node is determined by the child node.(Only valid when checkable and checkStrictly is false)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "animation",
              "description": "Whether to enable expand transition animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "action-on-node-click",
              "description": "The action triggered when the node is clicked",
              "value": {
                "type": "'expand'",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "select",
              "description": "Triggered when the tree node is clicked"
            },
            {
              "name": "check",
              "description": "Triggered when the tree node checkbox is clicked. `halfCheckedKeys` and `halfCheckedNodes` support from `2.19.0`."
            },
            {
              "name": "expand",
              "description": "Expand/close"
            },
            {
              "name": "drag-start",
              "description": "Node starts dragging"
            },
            {
              "name": "drag-end",
              "description": "Node end drag"
            },
            {
              "name": "drag-over",
              "description": "The node is dragged to the releasable target"
            },
            {
              "name": "drag-leave",
              "description": "Node leaves to release the target"
            },
            {
              "name": "drop",
              "description": "The node is released on a releasable target"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "Title"
            },
            {
              "name": "extra",
              "description": "Render additional node content"
            },
            {
              "name": "drag-icon",
              "description": "Custom drag icon"
            },
            {
              "name": "loading-icon",
              "description": "Custom loading icon"
            },
            {
              "name": "switcher-icon",
              "description": "Custom switcher icon"
            },
            {
              "name": "icon",
              "description": "Custom node icon"
            }
          ]
        },
        {
          "name": "a-trigger",
          "attributes": [
            {
              "name": "popup-visible",
              "description": "Whether the popup is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-popup-visible",
              "description": "Whether the popup is visible by default (uncontrolled mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "description": "Trigger method",
              "value": {
                "type": "TriggerEvent | TriggerEvent[]",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "description": "Popup position",
              "value": {
                "type": "TriggerPosition",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether the trigger is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-offset",
              "description": "The offset of the popup (the offset distance of the popup from the trigger)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "popup-translate",
              "description": "The moving distance of the popup",
              "value": {
                "type": "TriggerPopupTranslate",
                "kind": "expression"
              }
            },
            {
              "name": "show-arrow",
              "description": "Whether the popup shows an arrow",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "align-point",
              "description": "Whether the popup follows the mouse",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-hover-stay",
              "description": "Whether to keep the popup displayed when the trigger is moved out and moved into the popup",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "blur-to-close",
              "description": "Whether to close the popup when the trigger loses focus",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "click-to-close",
              "description": "Whether to close the popup when the trigger is clicked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "click-outside-to-close",
              "description": "Whether to close the popup when clicking on the outer area",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "unmount-on-close",
              "description": "Whether to uninstall the popup node when closing",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "content-class",
              "description": "The class name of the popup content",
              "value": {
                "type": "string|array|object",
                "kind": "expression"
              }
            },
            {
              "name": "content-style",
              "description": "The style of the popup content",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-class",
              "description": "The class name of the popup arrow",
              "value": {
                "type": "string|array|object",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-style",
              "description": "The style of the popup arrow",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "popup-style",
              "description": "The style of the popup",
              "value": {
                "type": "CSSProperties",
                "kind": "expression"
              }
            },
            {
              "name": "animation-name",
              "description": "The name of the popup animation",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "duration",
              "description": "The duration of the popup animation",
              "value": {
                "type": "| number\n| {\n    enter: number;\n    leave: number;\n  }",
                "kind": "expression"
              }
            },
            {
              "name": "mouse-enter-delay",
              "description": "Delay trigger time of mouseenter event (ms)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "mouse-leave-delay",
              "description": "Delay trigger time of mouseleave event (ms)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "focus-delay",
              "description": "Delay trigger time of focus event (ms)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fit-popup-width",
              "description": "Whether to set the width of the popup to the width of the trigger",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fit-popup-min-width",
              "description": "Whether to set the minimum width of the popup to the trigger width",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fix-position",
              "description": "When the size of the trigger changes, whether to recalculate the position of the popup",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popup-container",
              "description": "Mount container for popup",
              "value": {
                "type": "string | HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "auto-fit-position",
              "description": "Whether to automatically adjust the position of the popup to fit the window size",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "render-to-body",
              "description": "Whether to mount under the `body` element",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "prevent-focus",
              "description": "Whether to prevent elements in the pop-up layer from gaining focus when clicked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "scroll-to-close",
              "description": "Whether to close the popover when scrolling",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "popup-visible-change",
              "description": "Emitted when the status of the popup changes"
            },
            {
              "name": "show",
              "description": "Triggered after the trigger is shown (the animation ends)"
            },
            {
              "name": "hide",
              "description": "Triggered after the popup is hidden (the animation ends)"
            }
          ],
          "slots": [
            {
              "name": "content",
              "description": "Popup content"
            }
          ]
        },
        {
          "name": "a-typography",
          "attributes": [],
          "events": [],
          "slots": []
        },
        {
          "name": "a-typography-title",
          "attributes": [
            {
              "name": "heading",
              "description": "Heading level, equivalent to `h1` `h2` `h3` `h4` `h5` `h6`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Text type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "bold",
              "description": "Whether enable bold style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mark",
              "description": "Mark style",
              "value": {
                "type": "boolean | { color: string }",
                "kind": "expression"
              }
            },
            {
              "name": "underline",
              "description": "Whether enable underline style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "delete",
              "description": "Whether enable delete style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "code",
              "description": "Whether enable code style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "description": "Whether it's editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editing",
              "description": "Whether it's editing",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-editing",
              "description": "Default editing state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "edit-text",
              "description": "Edit text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copyable",
              "description": "Whether turn on copy functionality",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "copy-text",
              "description": "Copied text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copy-delay",
              "description": "After the copy is successful, the delay time for the copy button to return to the clickable state, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "ellipsis",
              "description": "Automatic overflow omission, refer to [EllipsisConfig](#EllipsisConfig) for more information.",
              "value": {
                "type": "boolean | EllipsisConfig",
                "kind": "expression"
              }
            },
            {
              "name": "edit-tooltip-props",
              "description": "Edit button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "copy-tooltip-props",
              "description": "Copy button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "edit-start",
              "description": "Edit start"
            },
            {
              "name": "change",
              "description": "Edit content change"
            },
            {
              "name": "edit-end",
              "description": "Edit end"
            },
            {
              "name": "copy",
              "description": "Copy"
            },
            {
              "name": "ellipsis",
              "description": "Ellipsis change"
            },
            {
              "name": "expand",
              "description": "Expand collapse event"
            }
          ],
          "slots": [
            {
              "name": "expand-node",
              "description": "Custom expand button"
            },
            {
              "name": "copy-icon",
              "description": "Custom copy button icon"
            },
            {
              "name": "copy-tooltip",
              "description": "Customize the tooltip content of the copy button"
            }
          ]
        },
        {
          "name": "a-typography-paragraph",
          "attributes": [
            {
              "name": "blockquote",
              "description": "Whether enable blockquote",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "spacing",
              "description": "The line height of the paragraph, the default line height is recommended for long text (more than 5 lines). `close` line height is recommended for short text (less than or equal to 3 lines).",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "Text type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "bold",
              "description": "Whether enable bold style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mark",
              "description": "Mark style",
              "value": {
                "type": "boolean | { color: string }",
                "kind": "expression"
              }
            },
            {
              "name": "underline",
              "description": "Whether enable underline style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "delete",
              "description": "Whether enable delete style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "code",
              "description": "Whether enable code style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "description": "Whether it's editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editing",
              "description": "Whether it's editing",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-editing",
              "description": "Default editing state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "edit-text",
              "description": "Edit text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copyable",
              "description": "Whether turn on copy functionality",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "copy-text",
              "description": "Copied text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copy-delay",
              "description": "After the copy is successful, the delay time for the copy button to return to the clickable state, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "ellipsis",
              "description": "Automatic overflow omission, refer to [EllipsisConfig](#EllipsisConfig) for more information.",
              "value": {
                "type": "boolean | EllipsisConfig",
                "kind": "expression"
              }
            },
            {
              "name": "edit-tooltip-props",
              "description": "Edit button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "copy-tooltip-props",
              "description": "Copy button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "edit-start",
              "description": "Edit start"
            },
            {
              "name": "change",
              "description": "Edit content change"
            },
            {
              "name": "edit-end",
              "description": "Edit end"
            },
            {
              "name": "copy",
              "description": "Copy"
            },
            {
              "name": "ellipsis",
              "description": "Ellipsis change"
            },
            {
              "name": "expand",
              "description": "Expand collapse event"
            }
          ],
          "slots": [
            {
              "name": "expand-node",
              "description": "Custom expand button"
            },
            {
              "name": "copy-icon",
              "description": "Custom copy button icon"
            },
            {
              "name": "copy-tooltip",
              "description": "Customize the tooltip content of the copy button"
            }
          ]
        },
        {
          "name": "a-typography-text",
          "attributes": [
            {
              "name": "type",
              "description": "Text type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "bold",
              "description": "Whether enable bold style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "mark",
              "description": "Mark style",
              "value": {
                "type": "boolean | { color: string }",
                "kind": "expression"
              }
            },
            {
              "name": "underline",
              "description": "Whether enable underline style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "delete",
              "description": "Whether enable delete style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "code",
              "description": "Whether enable code style",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "description": "Whether it's editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editing",
              "description": "Whether it's editing",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-editing",
              "description": "Default editing state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "edit-text",
              "description": "Edit text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copyable",
              "description": "Whether turn on copy functionality",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "copy-text",
              "description": "Copied text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "copy-delay",
              "description": "After the copy is successful, the delay time for the copy button to return to the clickable state, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "ellipsis",
              "description": "Automatic overflow omission, refer to [EllipsisConfig](#EllipsisConfig) for more information.",
              "value": {
                "type": "boolean | EllipsisConfig",
                "kind": "expression"
              }
            },
            {
              "name": "edit-tooltip-props",
              "description": "Edit button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "copy-tooltip-props",
              "description": "Copy button question prompt configuration",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "edit-start",
              "description": "Edit start"
            },
            {
              "name": "change",
              "description": "Edit content change"
            },
            {
              "name": "edit-end",
              "description": "Edit end"
            },
            {
              "name": "copy",
              "description": "Copy"
            },
            {
              "name": "ellipsis",
              "description": "Ellipsis change"
            },
            {
              "name": "expand",
              "description": "Expand collapse event"
            }
          ],
          "slots": [
            {
              "name": "expand-node",
              "description": "Custom expand button"
            },
            {
              "name": "copy-icon",
              "description": "Custom copy button icon"
            },
            {
              "name": "copy-tooltip",
              "description": "Customize the tooltip content of the copy button"
            }
          ]
        },
        {
          "name": "a-upload",
          "attributes": [
            {
              "name": "file-list",
              "description": "File List",
              "value": {
                "type": "FileItem[]",
                "kind": "expression"
              }
            },
            {
              "name": "default-file-list",
              "description": "Default file list (uncontrolled state)",
              "value": {
                "type": "FileItem[]",
                "kind": "expression"
              }
            },
            {
              "name": "accept",
              "description": "For the received upload file type, please refer to [HTML standard](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#htmlattrdefaccept \"_blank\")",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "action",
              "description": "Uploaded URL",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "Whether to disable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "Whether to support multiple file upload",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "directory",
              "description": "Whether to support folder upload (requires browser support)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "draggable",
              "description": "Whether to support drag and drop upload",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tip",
              "description": "Prompt text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "headers",
              "description": "Additional header information for upload request",
              "value": {
                "type": "Record<string, string>",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "Upload request additional data",
              "value": {
                "type": "| Record<string, string | Blob>\n| ((fileItem: FileItem) => Record<string, string | Blob>)",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "Uploaded file name",
              "value": {
                "type": "string | ((fileItem: FileItem) => string)",
                "kind": "expression"
              }
            },
            {
              "name": "with-credentials",
              "description": "Whether the upload request carries cookies",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "custom-request",
              "description": "Custom upload behavior",
              "value": {
                "type": "(option: RequestOption) => UploadRequest",
                "kind": "expression"
              }
            },
            {
              "name": "limit",
              "description": "Limit the number of uploaded files. `0` means no limit",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-upload",
              "description": "Whether to upload files automatically",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-file-list",
              "description": "Whether to display the file list",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-remove-button",
              "description": "Whether to display the remove button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-retry-button",
              "description": "Whether to display the retry button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-cancel-button",
              "description": "Whether to display the cancel button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-upload-button",
              "description": "Whether to display the retry button. Added `showOnExceedLimit` support in version 2.14.0",
              "value": {
                "type": "boolean | { showOnExceedLimit: boolean }",
                "kind": "expression"
              }
            },
            {
              "name": "show-preview-button",
              "description": "Whether to display the preview button in picture-card",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "download",
              "description": "Whether to add download attribute to `<a>` link",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-link",
              "description": "In the list mode, if the uploaded file has a URL, the link will be displayed. If you turn off only display text and click to trigger the `preview` event.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "image-loading",
              "description": "Native HTML attributes of `<img>`, browser support is required",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "list-type",
              "description": "Picture list type",
              "value": {
                "type": "ListType",
                "kind": "expression"
              }
            },
            {
              "name": "response-url-key",
              "description": "Get the key of the image URL in the Response. After opening, it will replace the pre-load image with the uploaded image",
              "value": {
                "type": "string | ((fileItem: FileItem) => string)",
                "kind": "expression"
              }
            },
            {
              "name": "custom-icon",
              "description": "Custom icon",
              "value": {
                "type": "CustomIcon",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-upload",
              "description": "Trigger before uploading a file",
              "value": {
                "type": "(file: File) => boolean | Promise<boolean | File>",
                "kind": "expression"
              }
            },
            {
              "name": "on-before-remove",
              "description": "Triggered before removing the file",
              "value": {
                "type": "(fileItem: FileItem) => Promise<boolean>",
                "kind": "expression"
              }
            },
            {
              "name": "on-button-click",
              "description": "Click the upload button to trigger (if the Promise is returned, the default input upload will be closed)",
              "value": {
                "type": "(event: Event) => Promise<FileList> | void",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "exceed-limit",
              "description": "Triggered when the uploaded file exceeds the limit"
            },
            {
              "name": "change",
              "description": "Triggered when the status of the uploaded file changes"
            },
            {
              "name": "progress",
              "description": "Triggered when the uploading file progress changes"
            },
            {
              "name": "preview",
              "description": "Trigger when the image preview is clicked"
            },
            {
              "name": "success",
              "description": "Triggered when upload is successful"
            },
            {
              "name": "error",
              "description": "Triggered when upload fails"
            }
          ],
          "slots": [
            {
              "name": "extra-button",
              "description": "Extra button"
            },
            {
              "name": "image",
              "description": "Image"
            },
            {
              "name": "file-name",
              "description": "File name"
            },
            {
              "name": "file-icon",
              "description": "File icon"
            },
            {
              "name": "remove-icon",
              "description": "Remove icon"
            },
            {
              "name": "preview-icon",
              "description": "Preview icon"
            },
            {
              "name": "cancel-icon",
              "description": "Cancel icon"
            },
            {
              "name": "start-icon",
              "description": "Start icon"
            },
            {
              "name": "error-icon",
              "description": "Error icon"
            },
            {
              "name": "success-icon",
              "description": "Success icon"
            },
            {
              "name": "retry-icon",
              "description": "Retry icon"
            },
            {
              "name": "upload-button",
              "description": "Upload button"
            },
            {
              "name": "upload-item",
              "description": "Upload list item"
            }
          ]
        }
      ]
    }
  }
}